<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN" "JATS-journalpublishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="position-paper">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">DS</journal-id>
<journal-title-group><journal-title>Data Science</journal-title></journal-title-group>
<issn pub-type="epub">2451-8492</issn><issn pub-type="ppub">2451-8484</issn><issn-l>2451-8484</issn-l>
<publisher>
<publisher-name>IOS Press</publisher-name><publisher-loc>Nieuwe Hemweg 6B, 1013 BG Amsterdam, The Netherlands</publisher-loc>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">DS006</article-id>
<article-id pub-id-type="doi">10.3233/DS-170006</article-id>
<article-categories><subj-group subj-group-type="heading">
<subject>Position Paper</subject></subj-group></article-categories>
<title-group>
<article-title>Stream reasoning: A survey and outlook</article-title><subtitle>A summary of ten years of research and a vision for the next decade</subtitle>
</title-group>
<contrib-group content-type="Editor">
<contrib contrib-type="editor">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-1267-0234</contrib-id>
<name><surname>Kuhn</surname><given-names>Tobias</given-names></name>
</contrib>
</contrib-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-4904-2511</contrib-id>
<name><surname>Dell’Aglio</surname><given-names>Daniele</given-names></name><xref ref-type="aff" rid="affa">a</xref><xref ref-type="corresp" rid="cor1">*</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5176-5885</contrib-id>
<name><surname>Della Valle</surname><given-names>Emanuele</given-names></name><xref ref-type="aff" rid="affb">b</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7913-0048</contrib-id>
<name><surname>van Harmelen</surname><given-names>Frank</given-names></name><xref ref-type="aff" rid="affc">c</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-0128-4602</contrib-id>
<name><surname>Bernstein</surname><given-names>Abraham</given-names></name><xref ref-type="aff" rid="affd">d</xref>
</contrib>
<aff id="affa"><label>a</label>DDIS, Department of Informatics, <institution>University of Zurich</institution>, Binzmühlestrasse 14, 8050 Zürich, <country>Switzerland</country>. E-mail: <email>dellaglio@ifi.uzh.ch</email></aff>
<aff id="affb"><label>b</label>DEIB, <institution>Politecnico di Milano</institution>, Via Ponzio, 34/5, 20133 Milano, <country>Italy</country>. E-mail: <email>emanuele.dellavalle@polimi.it</email></aff>
<aff id="affc"><label>c</label>Department of Computer Science, <institution>Vrije Universiteit Amsterdam</institution>, de Boelelaan 1081a, 1081HV Amsterdam, <country>The Netherlands</country>. E-mail: <email>frank.van.harmelen@vu.nl</email></aff>
<aff id="affd"><label>d</label>DDIS, Department of Informatics, <institution>University of Zurich</institution>, Binzmühlestrasse 14, 8050 Zürich, <country>Switzerland</country>. E-mail: <email>bernstein@ifi.uzh.ch</email></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>*</label>Corresponding author. E-mail: <email>dellaglio@ifi.uzh.ch</email>.</corresp>
</author-notes>
<pub-date date-type="preprint" publication-format="electronic"><day>17</day><month>10</month><year>2017</year></pub-date><pub-date date-type="pub" publication-format="electronic"><day>8</day><month>12</month><year>2017</year></pub-date><pub-date date-type="collection" publication-format="electronic"><year>2017</year></pub-date><volume>1</volume><issue>1-2</issue><fpage>59</fpage><lpage>83</lpage><history><date date-type="received"><day>2</day><month>03</month><year>2017</year></date><date date-type="accepted"><day>19</day><month>06</month><year>2017</year></date></history>
<permissions><copyright-statement>© 2017 – IOS Press and the authors.</copyright-statement><copyright-year>2017</copyright-year>
<license xlink:href="https://creativecommons.org/licenses/by/4.0/" license-type="open-access" xlink:type="simple">
<license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/" xlink:type="simple">Creative Commons Attribution (CC BY 4.0) License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions>
<abstract>
<p>Stream reasoning studies the application of inference techniques to data characterised by being highly dynamic. It can find application in several settings, from Smart Cities to Industry 4.0, from Internet of Things to Social Media analytics. This year stream reasoning turns ten, and in this article we analyse its growth. In the first part, we trace the main results obtained so far, by presenting the most prominent studies. We start by an overview of the most relevant studies developed in the context of semantic web, and then we extend the analysis to include contributions from adjacent areas, such as database and artificial intelligence. Looking at the past is useful to prepare for the future: in the second part, we present a set of open challenges and issues that stream reasoning will face in the next future.</p>
</abstract>
<kwd-group>
<label>Keywords</label>
<kwd>Stream reasoning</kwd>
<kwd>stream processing</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="x1-10001">
<label>1.</label>
<title>Introduction</title>
<p>Increasingly, applications require real-time processing of heterogeneous data streams together with large background knowledge bases. Consider the following examples. Which electricity-producing turbine has sensor readings similar (i.e., Pearson correlated by at least 0.75) to any turbine that subsequently had a critical failure in the past year [<xref ref-type="bibr" rid="ref075">75</xref>]? When a sensor on a drill in an oil-rig indicates that it is about to get stuck, how long – according to historical records – can I keep drilling [<xref ref-type="bibr" rid="ref074">74</xref>]? Where am I likely going to run into a traffic jam during my commute tonight and how long will it take, given current weather and traffic conditions [<xref ref-type="bibr" rid="ref003">3</xref>,<xref ref-type="bibr" rid="ref087">87</xref>,<xref ref-type="bibr" rid="ref107">107</xref>]? Who are the current top influencer users that are driving the discussion about the top emerging topics across all the social networks [<xref ref-type="bibr" rid="ref012">12</xref>,<xref ref-type="bibr" rid="ref071">71</xref>]? Where shall I spend my evening given the presence of people and what their doing (predicted analysing the spatio-temporal correlation between privacy-preserving aggregates of Mobile Telecom Data and of geo-located Social Media posts) [<xref ref-type="bibr" rid="ref013">13</xref>]? Who should be asked to go exercising, given people’s past, possibly sedentary behaviour and allergies (accessed in a privacy-preserving manner) as well as current weather conditions and pollution/allergen levels [<xref ref-type="bibr" rid="ref045">45</xref>]?</p>
<p>To answer these queries a system must be able to [<xref ref-type="bibr" rid="ref037">37</xref>]:</p>
<list>
<list-item id="x1-1002x1">
<label>R1.</label>
<p>handle <italic>volume</italic>: a typical oil production platform is equipped with about 400.000 sensors; Facebook, as of February, 2017, has 1.86 billion of monthly active users,<xref ref-type="fn" rid="fn1">1</xref><fn id="fn1"><label><sup>1</sup></label>
<p>See <uri>https://www.statista.com/statistics/264810/number-of-monthly-active-facebook-users-worldwide/</uri>. Accessed on February, 2017.</p></fn> etc.</p>
</list-item>
<list-item id="x1-1004x2">
<label>R2.</label>
<p>handle <italic>velocity</italic>: sensors on a power generation turbine can easily generate thousands of observations per minute; Instagram’s users, as of February, 2017, like on average 2.92 million post per minute;<xref ref-type="fn" rid="fn2">2</xref><fn id="fn2"><label><sup>2</sup></label>
<p>See <uri>https://blog.hootsuite.com/instagram-statistics/</uri>. Accessed on February, 2017.</p></fn> etc.</p>
</list-item>
<list-item id="x1-1006x3">
<label>R3.</label>
<p>handle <italic>variety</italic>: a large variety of static and streaming data sources and data management solutions exists in any domain. For instance, Milano has deployed some 600 traffic light systems equipped with inductive loops in the last 10 years: they use five different data formats, have different operational conditions, etc. Similarly, in social media, each network has its own data model and APIs.</p>
</list-item>
<list-item id="x1-1008x4">
<label>R4.</label>
<p>cope with <italic>incompleteness</italic>: sensors can run out of battery or networking links can break; in social media parts of the conversation may occur outside the social network [<xref ref-type="bibr" rid="ref011">11</xref>], or the APIs that are used to access the social stream may have a limited sampling rate.</p>
</list-item>
<list-item id="x1-1010x5">
<label>R5.</label>
<p>cope with <italic>noise</italic>: sensors can be imperfect, faulty, or out of its ideal operational range; text can be worded in an ironic way and a sentiment mining solution may be unable to detect it with 100% correctness.</p>
</list-item>
<list-item id="x1-1012x6">
<label>R6.</label>
<p>provide answers in a <italic>timely fashion</italic>: answers should be generated within well-specified latency bounds, which depend on the application scenarios. The time available to answer depends on the application domain: in call centres, routing needs to be decided in sub-seconds (in real-time); in oil operations, the detection of dangerous situations must occur within minutes (in near real-time).</p>
</list-item>
<list-item id="x1-1014x7">
<label>R7.</label>
<p>support <italic>fine-grained information access</italic>: the issued query may require to locate exactly a turbine, a means of public transportation, an agent in a contact centre among thousands of similar ones.</p>
</list-item>
<list-item id="x1-1016x8">
<label>R8.</label>
<p>integrate <italic>complex domain models</italic>: social media analytics may require topic models to make sense of a conversation; oil production control systems may require to model operational and control processes; traffic monitors may require rich background knowledge about topology, planned and unplanned events to improve the accuracy of the analyses.</p>
</list-item>
<list-item id="x1-1018x9">
<label>R9.</label>
<p>capture <italic>what users want</italic>: the query should let users define analytics-aware tasks such as Pearson correlation as a mean of similarity, or complex concepts such as traffic jam and top influencer user.</p>
</list-item>
</list>
<p>Ten years ago, no system was able to address all these requirements simultaneously. The management of highly dynamic data (<xref rid="x1-1004x2">R2</xref>) in a timely fashion (<xref rid="x1-1012x6">R6</xref>) developed around the idea of stream processing, a computation paradigm where data is processed in motion, i.e., on the fly and as soon as it becomes available. At that time, the most advanced stream processing solutions were developed in the context of Data Stream Management Systems (DSMSs) and Complex Event Processors (CEPs) [<xref ref-type="bibr" rid="ref029">29</xref>]. DSMSs transform data streams in timestamped relations (usually through a so-called window operator) and process them with well known techniques such as relational algebras [<xref ref-type="bibr" rid="ref006">6</xref>]. DSMSs allow the construction of systems able to compute aggregations and statistics (e.g. averages and Pearson correlation) over streaming data. CEPs, instead, look for patterns in the streams to identify when complex events occur [<xref ref-type="bibr" rid="ref090">90</xref>]. CEPs focus on the derivation of (complex) events from the matching of patterns of events (e.g., sequences) in the input data. Both DSMS and CEP techniques were able to provide reactive fine-grained information access (<xref rid="x1-1014x7">R7</xref>) in the presence of noisy data (<xref rid="x1-1010x5">R5</xref>).</p>
<p>These system were, however, limited when data was heterogeneous (<xref rid="x1-1006x3">R3</xref>), with complex domain models (<xref rid="x1-1016x8">R8</xref>) and needed to combine rich background knowledge. In those cases, users, to solve the desired tasks, were required to put large manual effort in developing complex networks of queries. There was a high potential in finding systematic solutions to cope with these problems. The research of those years on Knowledge Representation (KR) and Semantic Web (SemWeb) were bringing relevant inputs in that direction. The study of complexity of description logics were bringing new results, opening the door to techniques able to perform reasoning tasks in polynomial and sub-polynomial time. Techniques like Ontology Based Data Access (OBDA) [<xref ref-type="bibr" rid="ref025">25</xref>] were starting to show that complex domain models (R8) can be used to offer fine-grained information access (R7) to heterogeneous (R3) and incomplete datasets (R4). But these studies were focusing on static data, and solutions lacked the ability to provide reactive answers on data streams and to handle noise.</p>
<table-wrap id="x1-10191">
<label>Table 1</label>
<caption>
<p>The requirements Stream Reasoning aims at covering and how DSMS, CEP and Semantic Web cover them (✓ indicates which area fits the requirement better)</p>
</caption>
<table frame="hsides" rules="groups">
<thead>
<tr>
<td valign="top" align="left">Requirement</td>
<td valign="top" align="center">DSMS/CEP</td>
<td valign="top" align="center">SemWeb</td>
<td valign="top" align="center">Envisioned stream reasoning</td>
</tr>
</thead>
<tbody>
<tr>
<td valign="top" align="left"><xref rid="x1-1002x1">R1</xref>: Volume</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1004x2">R2</xref>: Velocity</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1006x3">R3</xref>: Variety</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1008x4">R4</xref>: Incompleteness</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1010x5">R5</xref>: Noise</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1012x6">R6</xref>: Timely fashion</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1014x7">R7</xref>: Fine-grained access</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1016x8">R8</xref>: Complex domains</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
<td valign="top" align="center">✓</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1018x9">R9</xref>: What users want</td>
<td valign="top" align="center">✓</td>
<td valign="top" align="center"/>
<td valign="top" align="center">✓</td>
</tr>
</tbody>
</table>
</table-wrap>
<p>CEP, DSMS, KR and SemWeb supplied the ingredients to Stream Reasoning [<xref ref-type="bibr" rid="ref037">37</xref>]. As the name suggests, this new research trend aims at studying how to perform online logical reasoning over highly dynamic data. Stream reasoners were envisioned as systems capable to address all the requirements above simultaneously (see Table <xref rid="x1-10191">1</xref>).</p>
<p>Even if the goal can be easily stated, satisfying all of the above-stated requirements is challenging in multiple ways. Theoretically, it is difficult to create comprehensive data and processing models. Practically, it is non-trivial to guarantee reactiveness given the required functional requirements. Nonetheless, we have seen the emergence of various results [<xref ref-type="bibr" rid="ref038">38</xref>,<xref ref-type="bibr" rid="ref091">91</xref>]. The large majority of them where in the Semantic Web community, but also the broader Artificial Intelligence, Robotics, Databases, and Distributed Systems communities performed investigations in the Stream Reasoning area.</p>
<p>Focusing on the works of the semantic web community, different research groups proposed (i) data models and vocabularies to capture data streams through RDF and ontologies (e.g. [<xref ref-type="bibr" rid="ref018">18</xref>,<xref ref-type="bibr" rid="ref068">68</xref>]), (ii) continuous query models, languages and prototypes (e.g. [<xref ref-type="bibr" rid="ref005">5</xref>,<xref ref-type="bibr" rid="ref015">15</xref>,<xref ref-type="bibr" rid="ref024">24</xref>,<xref ref-type="bibr" rid="ref082">82</xref>]), inspired by SPARQL [<xref ref-type="bibr" rid="ref063">63</xref>] and collected under the <italic>RDF Stream Processing</italic> (RSP) label, (iii) extensions of the reasoning tasks over streams, as consistency check and closure (e.g. [<xref ref-type="bibr" rid="ref016">16</xref>,<xref ref-type="bibr" rid="ref084">84</xref>,<xref ref-type="bibr" rid="ref108">108</xref>]), and (iv) applications built on top of the aforementioned results (e.g. [<xref ref-type="bibr" rid="ref012">12</xref>,<xref ref-type="bibr" rid="ref072">72</xref>,<xref ref-type="bibr" rid="ref119">119</xref>]). However, a complete answer to the stream reasoning research question is still missing.</p>
<p>For this reason, in this article, we introduce a reference model to capture, organize and summarize the results that the semantic web community has obtained so far (Section <xref rid="x1-20002">2</xref>). Then, we identify the challenges to address in the next years by analysing the research results of other communities and the current trends in big data processing (Section <xref rid="x1-100003">3</xref>). In Section <xref rid="x1-260004">4</xref>, we wrap up and draw some conclusions.</p>
</sec>
<sec id="x1-20002">
<label>2.</label>
<title>A reference model for stream reasoning</title>
<p>In the last ten years, several techniques have been proposed under the stream reasoning label. Such techniques are heterogeneous in terms of input, output and use cases. To present them, we present Fig. <xref rid="x1-20011">1</xref> as a reference model for stream reasoning [<xref ref-type="bibr" rid="ref040">40</xref>].</p>
<fig id="x1-20011">
<label>Fig. 1.</label>
<caption>
<p>A model to describe stream reasoners.</p>
</caption>
<graphic xlink:href="ds-1-ds006-g001.jpg"/>
</fig>
<p>In the remainder of this paper, we denote a data stream as a sequence of time-annotated items ordered according to a temporal criteria. Each item brings an information unit, e.g. a sensor observation, a social network action or a stock exchange. It is possible to represent the stream items in different formats. In the semantic web context, data is usually modelled according to RDF [<xref ref-type="bibr" rid="ref031">31</xref>], a W3C recommendation where data is structured as directed labelled graph, with vertices and edges representing, respectively, resources and relations among them. We name RDF stream a stream where items are represented according to RDF, i.e., each item is represented through a directed labelled graph.</p>
<p>We now present a reference architecture for a generic continuous query answering system over streams, identified in Fig. <xref rid="x1-20011">1</xref> by the blue blocks. <italic>Window operators</italic> manage the access to the stream: they create time-dependent finite views over the streams, namely windows, over which processors perform the tasks. Window contains a portion of the input streams, i.e. a set of timestamped data items, that represents the data needed to solve the task at the current time instant. Several types of window operators exist, initially defined in CEP and DSMS research [<xref ref-type="bibr" rid="ref029">29</xref>].</p>
<p>CEP aims at verifying if given sequences of events happen in the stream. In this sense, time annotations are key, since engines use them to determine if temporal constraints defined in the event patterns are satisfied. When not specified, event patterns are evaluated over a large portion of the stream, i.e. from the moment on which the engine starts to observe the stream up to the current moment. We can model this behaviour through <italic>landmark windows</italic>. Fixed an initial time instant, the window expands over time to capture portion of the stream that grows over time.</p>
<p>DSMSs perform operations that do not require to process time annotations after that windows have been computed, like aggregations and filters. That means, while the content of the stream items is important to solve the task, time annotations are not. In this sense, the <italic>window merge</italic> is an operation that moves from temporal data (i.e. time-annotated data items) to atemporal one (i.e. a collection of data items). <italic>Sliding windows</italic> are the typical window operators considered in DSMS. This operator creates a window with a fixed width in terms of time units or data items. The operator shifts (slides) the window over time, capturing the most recent part of the stream.</p>
<p>It is worth noting that time in CEP and DSMS is treated in different ways: in the former it has a predominant role while evaluating the event patterns, while in the latter it is used to identify the relevant portion of data over which an atemporal operation is performed.</p>
<p>How DSMS and CEP can be extended to perform reasoning tasks is one of the first problems studied in stream reasoning. In the semantic web community, this was addressed by adding DSMS and CEP features to SPARQL [<xref ref-type="bibr" rid="ref063">63</xref>] – the query language for RDF-data recommended by W3C. Every SPARQL Query is built from Basic Graph Patterns (BGPs). A BGP is a direct labelled graph where vertices and edges can be either resources or variables. The evaluation of a BGP over an RDF graph consists of finding the set of mappings between variables in the BGP and the resources in the RDF graph such that the BGP matches the RDF graph. The presence of an inference process in SPARQL is modelled through entailment regimes [<xref ref-type="bibr" rid="ref059">59</xref>]. Entailment regimes affect the basic graph pattern evaluation by extending the matching definition to take the edges and the nodes that can be logically inferred from those explicitly stated into account.</p>
<p>When we move to a model for processing streams, as the one in Fig. <xref rid="x1-20011">1</xref>, we may observe that there is not one and only one correct moment to take the inference process into account. In other words, the key question we need to answer is: <italic>while processing a stream, when is the correct moment to take the inference process into account?</italic> The reference model described above allows different options, depicted through the orange boxes in Fig. <xref rid="x1-20011">1</xref>. Inference can take place before or after the window (giving, respectively, stream- and window-level entailments), or still after that the window content is merged (giving graph-level entailment). This decision may affect the performance, the result and the behaviour of the engine. Taking into account this framework, group the main works developed in the state of the art of stream reasoning, in four different groups, that we present in the rest of this section.</p>
<sec id="x1-30002.1">
<label>2.1.</label>
<title>Graph-level entailment</title>
<p>The last possible moment to take into account the inference processes is after the window merge. That means a window captures a portion of the stream and a merge operation creates a collection from the stream item contents.</p>
<p>We name <italic>graph-level entailment</italic> a continuous query evaluation where the inference process is considered at this moment. As explained above, this enables the execution of typical DSMS-like queries, e.g. aggregations and filters, but make not possible to evaluate CEP-like queries, since temporal annotations are lost and it is not possible to verify if temporal constraints are satisfied. This is represented in Fig. <xref rid="x1-20011">1</xref>, where the graph-level entailment stacks on DSMS-like queries but not on CEP-like ones.</p>
<p>The graph-level entailment can be viewed as a direct application of SPARQL entailment regimes, since the inference process is taken into account in the context of the evaluation of (basic) graph patterns over graphs.</p>
<p>A large amount of research can be captured by this level. In the following, we group it in two main groups: systems that work under a simple entailment regime, i.e. RDF entailment, and the ones that considers more complex reasoning formalisms, e.g. Description Logics and ASP. They are presented respectively in Sections <xref rid="x1-40002.1.1">2.1.1</xref> and <xref rid="x1-60002.1.3">2.1.3</xref>. To enable the comprehension of the latter, we briefly review some prominent work in incremental reasoning in Section <xref rid="x1-50002.1.2">2.1.2</xref>.</p>
<sec id="x1-40002.1.1">
<label>2.1.1.</label>
<title>Stream reasoning at graph level under simple entailment regime</title>
<p>The first case we consider is the one where the RDF entailment process is involved, which in SPARQL is named <italic>simple entailment regime</italic>. When a SPARQL query is evaluated under this regime, the engine verifies if a graph pattern matches the input graph, without considering ontological language or inference processes.</p>
<p>The first generation of continuous query answering systems for RDF data streams is represented in this category: engines where queries are registered and answers are continuously produced when new data is made available.</p>
<p>Several languages and prototypes were built by following the DSMS vision: sliding windows to capture finite portions of the streams to be queried through SPARQL as collections of RDF statements. Between 2010 and 2012, different groups proposed languages as the Continuous SPARQL (C-SPARQL) language [<xref ref-type="bibr" rid="ref015">15</xref>], CQELS-QL [<xref ref-type="bibr" rid="ref082">82</xref>] and SPARQL<sub>stream</sub> [<xref ref-type="bibr" rid="ref024">24</xref>]. Such languages are similar and relies on the idea of extending SPARQL with sliding windows. For example, C-SPARQL extends the FROM clause in order to support sliding windows, while CQELS-QL pushes sliding windows in the GRAPH clause. There are differences on the prototyping sides as well. The C-SPARQL engine and CQELS, implementing respectively C-SPARQL and CQELS-QL, take as input RDF streams and process them as extended SPARQL query processors (e.g. ARQ<xref ref-type="fn" rid="fn3">3</xref><fn id="fn3"><label><sup>3</sup></label>
<p>Cf. <uri>https://jena.apache.org/documentation/query/</uri>.</p></fn>). morph-stream, an implementation of SPARQL<sub>stream</sub>, adopts an OBDA-like approach: it processes relational streams by transforming the query from SPARQL<sub>stream</sub> to one to be registered to a DSMS engine such as Esper or GSN.</p>
<p>A different approach is adopted by the Incremental eNgine for STANding Sparql – INSTANS [<xref ref-type="bibr" rid="ref110">110</xref>]. As query language, it adopts SPARQL 1.1, with an extension to its query evaluation model to continuously query data streams. The implementation of INSTANS relies on the RETE algorithm [<xref ref-type="bibr" rid="ref054">54</xref>]: tasks are expressed as networks of queries and compiled in RETE-like structures to evaluate the results. More detailed comparison analyses of those solutions may be found in [<xref ref-type="bibr" rid="ref041">41</xref>] and on the W3C RSP-CG wiki.<xref ref-type="fn" rid="fn4">4</xref><fn id="fn4"><label><sup>4</sup></label>
<p>Cf. <uri>https://www.w3.org/community/rsp/wiki/RDF_Stream_Processors_Implementation</uri>.</p></fn></p>
</sec>
<sec id="x1-50002.1.2">
<label>2.1.2.</label>
<title>Incremental reasoning</title>
<p>Among the techniques to do reasoning, the closest to the stream reasoning idea are the incremental reasoning ones. They have been developed to cope with changes in knowledge bases. The intuition is to modify part of the materialisation of a knowledge base when updates happen, without re-materialising everything from scratch. As update operations occur these techniques identify the facts that have to be removed – since they were derived by deleted facts – and added – since they can be inferred by new facts. In this way, it is possible to avoid the recomputation of the whole materialisation upon changes.</p>
<p>DReD [<xref ref-type="bibr" rid="ref126">126</xref>] has been proposed in 2005 by Volz et al. and it is inspired by techniques of view maintenance in databases. The idea is to compute two sets of axioms to be added and removed through a three-step process. In the first step, deletions are computed starting from the facts that should be deleted. This step produces an overestimation, due to the fact that some derived facts may still be inferred from other non-deleted facts. In the second step, the algorithm looks for these facts and remove them from the facts to be deleted. In the last step, new derivations are computed starting from the axioms that have been added to the knowledge base.</p>
<p>The first two steps of the DReD algorithm are critical for the performance of the technique: a considerable amount of computational effort may be required to identify the facts to be labelled as to be deleted in the first step and rectracted in the second. To overcome this limit, Motik and al. propose the Backward/Forward algorithm [<xref ref-type="bibr" rid="ref097">97</xref>] in 2015. The idea is to use a combination of backward and forward inference to limit the number of overestimations in the first step. An implementation of this algorithm is available in RDFox [<xref ref-type="bibr" rid="ref101">101</xref>], an in-memory datalog engine.</p>
<p>A different approach is the one considered by Ren and Pan in Truth Maintenance Systems in 2011 [<xref ref-type="bibr" rid="ref108">108</xref>]. Differently from DReD, this technique builds and maintains a dependency graph. When deletions occur, this graph is used to decide if derived facts should be removed; when additions happen, the graph is updated by adding new edges and vertices. This approach is optimised for <inline-formula><mml:math id="math001">
<mml:msup>
<mml:mrow>
<mml:mi mathvariant="script">EL</mml:mi>
</mml:mrow>
<mml:mrow>
<mml:mo>+</mml:mo>
<mml:mo>+</mml:mo>
</mml:mrow>
</mml:msup></mml:math></inline-formula> [<xref ref-type="bibr" rid="ref009">9</xref>,<xref ref-type="bibr" rid="ref010">10</xref>].</p>
<p>DynamiTE [<xref ref-type="bibr" rid="ref125">125</xref>] is a framework proposed in 2013 to maintain the materialisation incrementally. One of the novelties introduced by Dynamite is the parallelisation of the inference process. The framework supports DReD and a counting algorithm proposed by the authors for the <italic>ρ</italic> DF fragment [<xref ref-type="bibr" rid="ref100">100</xref>] of RDFS. On additions, DynamiTE recomputes the materialisation to add the new entailments through a parallel Datalog evaluation. On removals, it deletes the explicit and entailed axioms no longer valid. Several algorithms can perform this action: the authors considered DReD and a “counting” algorithm they defined, that exploits the idea of counting the number of justifications that entailed it.</p>
</sec>
<sec id="x1-60002.1.3">
<label>2.1.3.</label>
<title>Stream reasoning at graph level under other entailment regimes</title>
<p>Moving to non-simple entailment regimes opens a set of challenges given by the introduction of the ontological languages and the associated inference processes.</p>
<p>One of the first attempts of building a stream reasoner is Streaming Knowledge Bases [<xref ref-type="bibr" rid="ref127">127</xref>] in 2008. The idea was to pipe a DSMS engine, TelegraphCQ, with a reasoning engine, the Jena Rule engine. The system is able to performs RDFS inference.</p>
<p>The Incremental Materialization for RDF Streams algorithm (IMaRS) [<xref ref-type="bibr" rid="ref041">41</xref>], proposed in 2011 for the RDFS+ ontological language takes a step further. This technique focuses on the incremental maintenance of a window content as the window slides. The intuition behind this algorithm is that in this setting, deletions can be foreseen and are not random as in the incremental reasoning setting described above. An expiration time annotation is associated to all the axioms involved in the materialisation, and such information is exploited to identify only the facts to be deleted, avoiding the overestimation typical of DReD. An implementation of IMaRS is available in Sparkwave [<xref ref-type="bibr" rid="ref079">79</xref>]. It implements the algorithm on the top of the RETE algorithm and targets the RDF Schema entailment. RDF schema axioms are encoded as RETE rules and organised in a network. When new facts are added to the system, they are matched against the rules.</p>
<p>Another stream reasoner is StreamRule [<xref ref-type="bibr" rid="ref095">95</xref>], proposed in 2013. As Streaming Knowledge Bases, the system is designed as a two-layer approach. The first layer is an RSP engine acting as a filter, that reduces the amount of data to be considered in the inference process. The second layer is a reasoning engine. What makes StreamRule unique w.r.t. the solution described above is the adoption of Answer Set Programming (ASP) [<xref ref-type="bibr" rid="ref048">48</xref>], rather than a DL reasoner. ASP is a declarative problem-solving paradigm, characterized by rich modelling language maintaining very good performance, obtained by exploiting techniques from constraint solving. ASP works with static knowledge; Incremental ASP [<xref ref-type="bibr" rid="ref058">58</xref>] overcomes such a limit and extends ASP to compute the solutions incrementally.</p>
<p>The principle of working on a graph captured with a time window was also applied to inductive reasoning. In [<xref ref-type="bibr" rid="ref017">17</xref>], authors used graph-level inductive reasoning in developing a recommendation engine that suggest topics to users.</p>
</sec>
</sec>
<sec id="x1-70002.2">
<label>2.2.</label>
<title>Window-level entailment</title>
<p>In the previous section, we explain that graph-level entailment is a direct application of atemporal reasoning techniques over streams. The main drawback of this approach is that the process uses only a subset of the information available in the stream: it considers the data item contents but not the relative temporal annotations. While DSMS queries can benefit if evaluated under graph-level entailment, CEP-like queries do not gain much advantages.</p>
<p>Window-level entailment overcomes these limitations by applying the inference process on the non-merged stream items captured by the window operators declared in the query. Differently from graph-level entailment, which works on graphs (ontologies), the window-level entailment applies the inference process to a window, i.e. a finite sequence of timestamped data items.</p>
<p>The Spatial and Temporal ontology Access with a Reasoning-based Query Language (STARQL) [<xref ref-type="bibr" rid="ref102">102</xref>] proposes a framework to access and query heterogeneous sensor data through ontologies. STARQL is structured as a two-layer framework, composed of an Ontology Language, to model the data and its schema, and an Embedded Constraint Language, to compose the queries. STARQL offers window operators, clauses to express event matching and a layer to integrate static and streaming data. STARQL uses a sequence of time-annotated ontologies to make inference taking into account the temporal annotations of the streaming data. Recently, STARQL has been implemented in Exastream [<xref ref-type="bibr" rid="ref073">73</xref>], a system that adopts an OBDA approach, similar to morph-stream.</p>
</sec>
<sec id="x1-80002.3">
<label>2.3.</label>
<title>Stream-level entailment</title>
<p>One of the main limitations of the window-level entailment is that it only considers a recent portion of the stream. For example, when a sliding window computes a new window, what happened in the past is forgotten and the inference process considers the data contained in the new fixed window.</p>
<p>Stream-level entailment overcomes this limitation, considering a larger portion of the stream than the one defined by the user through window operator. Even if the name suggests that this entailment regime considers the whole stream, in this case the reasoning is made on the top of a landmark window, which is a window that captures the stream from an initial time instant (e.g. when the source starts to supply the data when the engine starts to monitor the stream) up to now.</p>
<p>ETALIS (Event TrAnsaction Logic Inference System) [<xref ref-type="bibr" rid="ref005">5</xref>] is a CEP-based stream reasoning engine. This query model processes streams where data items are annotated with two timestamps (i.e., time intervals). Users can specify event processing tasks in ETALIS using two declarative rule-based languages, ETALIS Language for Events (ELE) and Event Processing SPARQL [<xref ref-type="bibr" rid="ref004">4</xref>] (EP-SPARQL). The former language is more expressive than the latter, even if it is less usable. A common point is that complex events are derived from simpler events using deductive prolog rules. EP-SPARQL supports backward temporal reasoning over RDFS, continuously evaluating the query over the whole stream received by the engine.</p>
<p>The Logic-based framework for Analyzing Reasoning over Streams [<xref ref-type="bibr" rid="ref021">21</xref>] (LARS) defines a logic for modelling stream-related axioms. LARS models the notion of stream as a sequence of time-annotated formulas. In addition to the usual boolean operators (and, or, implies, not), the language introduces operators, such as ♢ and □ to express the fact that a formula holds respectively at some time in the future and every time in the future; @ to state that a formula holds at a specific time instant. LARS formulas can be evaluated against the whole stream, or the scope can be limited through the usage of the ⊞ operator, that models a window operator. Through this operator, LARS is also able to capture reasoning at window-level entailment.</p>
<p>The principle of reasoning at stream-level was also applied to inductive reasoning. In [<xref ref-type="bibr" rid="ref086">86</xref>], authors used stream-level inductive reasoning in predicting Knowledge in an Ontology Stream.</p>
</sec>
<sec id="x1-90002.4">
<label>2.4.</label>
<title>Measuring progresses</title>
<p>Ten years ago, we proposed [<xref ref-type="bibr" rid="ref037">37</xref>] to initially assess progress by measuring the degree to which a stream reasoner meets the requirements we listed in Section <xref rid="x1-10001">1</xref>. We left it as a community challenge to identify how to systematically evaluate stream-reasoning implementations against well-defined quality criteria, e.g. creating one or more domain specific benchmarks [<xref ref-type="bibr" rid="ref060">60</xref>].</p>
<p>The first proposal in this direction was SRBench [<xref ref-type="bibr" rid="ref131">131</xref>]. It provides seventeen continuous queries and a weather related dataset annotated with the Semantic Sensor Network ontology. Its goal is to assess the ability of implementations to cover different stream reasoning features even if little emphasis is dedicated to reasoning.</p>
<p>A second proposal was LSBench [<xref ref-type="bibr" rid="ref083">83</xref>]. It proposes twelve continuous queries, a social network ontology, and a data generator. Its goal is to move from coverage of query language features to systematic measures of well-defined quality criteria. It does not include any reasoning, but raises the problem of assessing correctness.</p>
<p>The theme of correctness helped the community in opening the discussion on what a domain specific benchmark on stream reasoning should look for [<xref ref-type="bibr" rid="ref113">113</xref>] and in deepening the understanding of the semantics of RDF continuous processing. The investigations that eventually led to RSP-QL semantics [<xref ref-type="bibr" rid="ref044">44</xref>] also delivered CSRBench [<xref ref-type="bibr" rid="ref042">42</xref>] as a side result. This benchmark is an extension of SRbench that includes an oracle able to tell which result shall be expected from a given implementation.</p>
<p>Two more mature proposals, CityBench [<xref ref-type="bibr" rid="ref003">3</xref>] and YAbench [<xref ref-type="bibr" rid="ref077">77</xref>], emerged from those pioneering works. They provide real and synthetic workloads together with software environments to ease the execution of the experiments and the measurement of the quality criteria.</p>
<p>Heaven [<xref ref-type="bibr" rid="ref122">122</xref>] is the most recent work in this area. It takes a step in the direction of stressing expressive reasoning and offers an open-source test-stand to run reproducible and repeatable experiments. The goal of Heaven is to offer the community an environment where researchers can (i) take any dataset that contains events originated over time, an ontology that describes the dataset, a query workload that requires a certain entailment regime, and (ii) run a comparative experiment against all the stream reasoners included in the environment.</p>
<p>The next step in this area should be the integration of the benchmarking efforts that are maturing in parallel in the semantic web, e.g., the Social Network benchmark of the Linked Data Benchmark Council [<xref ref-type="bibr" rid="ref051">51</xref>], the results of the Hobbit project [<xref ref-type="bibr" rid="ref112">112</xref>], but also in the Big Data, e.g., the streaming workloads of HiBench [<xref ref-type="bibr" rid="ref067">67</xref>].</p>
</sec>
</sec>
<sec id="x1-100003">
<label>3.</label>
<title>Open problems and challenges for the next years</title>
<p>Stream reasoning research progressed and expanded its initial community to a growing number of practitioners. In this section, we review the requirements presented in Section <xref rid="x1-10001">1</xref> in the light of the current state of the art and outline open questions.</p>
<table-wrap id="x1-100012">
<label>Table 2</label>
<caption>
<p>A review of the stream reasoning requirements w.r.t. the current state of the art (<inline-formula><mml:math id="math002">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo>=</mml:mo></mml:math></inline-formula> not specifically treated so far, <inline-formula><mml:math id="math003">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo>=</mml:mo></mml:math></inline-formula> treated but not resolved, <inline-formula><mml:math id="math004">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo>=</mml:mo></mml:math></inline-formula> universally addressed by all studies)</p>
</caption>
<table frame="hsides" rules="groups">
<thead>
<tr>
<td valign="top" align="left">Requirement</td>
<td valign="top" align="center">Current Stream Reasoning</td>
</tr>
</thead>
<tbody>
<tr>
<td valign="top" align="left"><xref rid="x1-1002x1">R1</xref>: Volume</td>
<td valign="top" align="center">⋆</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1004x2">R2</xref>: Velocity</td>
<td valign="top" align="center"><inline-formula><mml:math id="math005">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1006x3">R3</xref>: Variety</td>
<td valign="top" align="center"><inline-formula><mml:math id="math006">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1008x4">R4</xref>: Incompleteness</td>
<td valign="top" align="center">⋆</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1010x5">R5</xref>: Noise</td>
<td valign="top" align="center">⋆</td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1012x6">R6</xref>: Timely fashion</td>
<td valign="top" align="center"><inline-formula><mml:math id="math007">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1014x7">R7</xref>: Fine-grained access</td>
<td valign="top" align="center"><inline-formula><mml:math id="math008">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1016x8">R8</xref>: Complex domains</td>
<td valign="top" align="center"><inline-formula><mml:math id="math009">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
<tr>
<td valign="top" align="left"><xref rid="x1-1018x9">R9</xref>: What users need</td>
<td valign="top" align="center"><inline-formula><mml:math id="math010">
<mml:mo mathvariant="normal">⋆</mml:mo>
<mml:mo mathvariant="normal">⋆</mml:mo></mml:math></inline-formula></td>
</tr>
</tbody>
</table>
</table-wrap>
<p>Table <xref rid="x1-100012">2</xref> summarizes the current state and serves as an indication towards possible directions for future stream reasoning research. DSMS, CEP and semantic web let users express and use complex notions in queries, such as trends, skylines and aggregations. However, users are demanding for even more sophisticated features (<xref rid="x1-1018x9">R9</xref>), as discussed in Section <xref rid="x1-110003.1">3.1</xref>.</p>
<p>Almost every study in stream reasoning addressed the timely fashion requirement (<xref rid="x1-1012x6">R6</xref>). It is possible to observe it by considering that time performance is usually the most relevant axis when performing evaluations. Similarly, the focus has been on data streams with rich data models. In this sense, the requirement related to complex domains (<xref rid="x1-1016x8">R8</xref>) has been partially treated. However, we should consider this requirements in a broader sense. As we explain in Section <xref rid="x1-150003.2">3.2</xref> stream reasoning is expanding by considering (i) more expressive ontological languages and (ii) non-deductive reasoning approaches.</p>
<p>Velocity and fine-grained access (<xref rid="x1-1004x2">R2</xref> and <xref rid="x1-1014x7">R7</xref>) have been the two requirements at the centre of the research so far. Indeed, all studies on stream reasoning so far addressed the velocity dimension of the problem, considering streaming data the main object of investigation. In future, as we present in Section <xref rid="x1-180003.3">3.3</xref>, we expect to assist to the rise of <italic>smart</italic> streams that leverage semantics for processing.</p>
<p>Volume and variety (<xref rid="x1-1002x1">R1</xref> and <xref rid="x1-1006x3">R3</xref>) have not been properly addressed, but they are key requirements to enable stream reasoning in real-world big data environments. We discuss this in Section <xref rid="x1-190003.4">3.4</xref>.</p>
<p>Finally, massive data is common, but real-world data is often characterized also by being imperfect, i.e. incomplete and noisy (<xref rid="x1-1008x4">R4</xref> and <xref rid="x1-1010x5">R5</xref>). In this direction, stream reasoning research is still at the starting point. In Section <xref rid="x1-230003.5">3.5</xref> we analyze these research opportunities.</p>
<sec id="x1-110003.1">
<label>3.1.</label>
<title>Towards queries that capture user needs</title>
<p>Queries connect users to stream reasoners: they encode the needs of the former in a format readable and processable by the latter. Research on query languages has been one of the leading topics of the stream reasoning trend up to now. There has been the first wave of languages, e.g. [<xref ref-type="bibr" rid="ref004">4</xref>,<xref ref-type="bibr" rid="ref015">15</xref>,<xref ref-type="bibr" rid="ref024">24</xref>,<xref ref-type="bibr" rid="ref082">82</xref>], refined and improved by new proposals to increase the expressiveness and the supported operations, e.g. [<xref ref-type="bibr" rid="ref057">57</xref>,<xref ref-type="bibr" rid="ref102">102</xref>]. In parallel, research has worked on comparing and contrasting such languages, e.g. [<xref ref-type="bibr" rid="ref032">32</xref>,<xref ref-type="bibr" rid="ref043">43</xref>,<xref ref-type="bibr" rid="ref044">44</xref>,<xref ref-type="bibr" rid="ref070">70</xref>].</p>
<p>Despite the results obtained so far, the research on query languages for stream reasoning is far from being complete. In this section, we present three directions that, in our opinion, are needed to reduce of the distance between stream reasoners and users (and consequently, real applications).</p>
<sec id="x1-120003.1.1">
<label>3.1.1.</label>
<title>Capturing a wider set of tasks in queries</title>
<p>So far, language development focused primarily on SPARQL-like queries, where the main goal is matching of graph patterns over the streaming data under some entailment regimes. This kind of query sets the basis to filter, aggregate, as well as detect trends and complex event patterns in the data. However, there are other important tasks to be performed over streams. One example are spatial operations, that allow to define geographical and trajectory queries. They have been largely studied in semantic web as well as in DSMSs and CEPs, e.g. [<xref ref-type="bibr" rid="ref081">81</xref>,<xref ref-type="bibr" rid="ref104">104</xref>,<xref ref-type="bibr" rid="ref105">105</xref>], but only recently stream reasoning started to move in this direction (e.g. [<xref ref-type="bibr" rid="ref034">34</xref>]).</p>
<p>In several domains, there is the need to perform complex analyses of streaming data that make heavy use of aggregation, correlation functions and arithmetic operations as well as of inductive methods. Examples of this trend are big data processors, where solutions such as Apache Spark [<xref ref-type="bibr" rid="ref129">129</xref>], Apache Flink [<xref ref-type="bibr" rid="ref027">27</xref>] and Twitter Heron [<xref ref-type="bibr" rid="ref080">80</xref>] offer an extensive set of operations, from counting algorithms up to machine learning methods [<xref ref-type="bibr" rid="ref094">94</xref>]. Solutions in this direction are starting to appear, e.g. [<xref ref-type="bibr" rid="ref075">75</xref>], and we expect a large interest in investigating this area in the near future.</p>
<p>Analytics provide insights, but users often also want fine grain access to the information that supports those insights. This calls for optimizing a special type of continuous queries that include preferences in the information need, e.g. continuous top-k queries [<xref ref-type="bibr" rid="ref099">99</xref>]. Some initial works exist on top-k query answering in SPARQL, but to the best of our knowledge there is only a vision paper [<xref ref-type="bibr" rid="ref039">39</xref>] that casts some light in this direction. No one has attempted, yet, to investigate this area.</p>
<p>Moreover, the graph structure of the RDF data model opens the doors to the application of the classical algorithms related to graph theory, e.g. path finding, connectivity, bipartiteness and clique search. How to apply such techniques to graph streams has been studied in the database literature [<xref ref-type="bibr" rid="ref093">93</xref>].</p>
<p>Whilst there are examples for supporting these kinds of operations on static data (e.g., [<xref ref-type="bibr" rid="ref076">76</xref>]), to the best of our knowledge, none of the stream reasoning-related query languages designed up to now support the above operations. Given the importance these non-deductive techniques have gained over the past few years (just think about the rise of machine learning), we strongly believe that the next years will see the addition of new operations and the design of languages that support them. It may still remain important to offer declarative languages (in addition to programmable APIs) to describe tasks, since they separate the expected output (the goal to the computation) from the way it should be computed and may – in some cases – be easier to handle for domain experts.</p>
</sec>
<sec id="x1-130003.1.2">
<label>3.1.2.</label>
<title>Tightening CEP and ontological reasoning</title>
<p>It is worth considering the relation between CEP and DL reasoning. CEP queries are <italic>de-facto</italic> production rules: if a set of temporal constraints over events are satisfied (condition), then a complex event is triggered (action). That means a system that involved both CEP rules and DL axioms has two inference components: one based on CEP rules and another one based on ontological axioms.</p>
<p>This consideration opens the door to several questions, such as: which part of the knowledge better fits the CEP rules and which one better fits ontology axioms? We can imagine that while some parts of the knowledge can be modelled as CEP rules or ontological axioms only, others may be captured by both formalisms. Such modelling decisions have an impact on the evaluation engine, its performance and the results it computes.</p>
<p>Another question is: how can the two components be combined? Following the framework presented in Section <xref rid="x1-20002">2</xref>, the CEP evaluation is on top of the entailment (both window- and stream-level one). A well-marked separation between the two components is a safeguard with regards to complexity, but may not fit some applications. For example, a use case may require that the output of CEP reasoning will result in changes to the ontological entailment, which in turn may trigger CEP rules. In such cases, the interaction of the two deduction sub-systems may affect the performance, with the risk to end up in endless processes. One possible solution to the problem is to identify the conditions under which CEP rules maintain the decidability of the stream reasoning process, similarly to the research on DL-safe rules in [<xref ref-type="bibr" rid="ref098">98</xref>].</p>
</sec>
<sec id="x1-140003.1.3">
<label>3.1.3.</label>
<title>Forgetting knowledge</title>
<p>While processing streams, the identification of data that is useful for the current computation can be problematic. Several solutions have been proposed up to now, from sliding window mechanisms in DSMSs, to consumption and selection policies in CEPs. Such methods are key since they allow to discard data and keep under control the resource usage, and are currently adapted by stream reasoning solutions, e.g. sliding windows in CQELS and consumption policies in Etalis. However, they may lead to unexpected situations, e.g. a fact may fall out of the window while it is still relevant in the inference process.</p>
<p>In the context of stream reasoning, there is the opportunity to develop more sophisticated forgetting mechanisms. The notion of consumption is slightly different from the one of expiration [<xref ref-type="bibr" rid="ref023">23</xref>]: consumed facts are not useful for processing, whilst expired facts are not true anymore. Incremental reasoning (Section <xref rid="x1-50002.1.2">2.1.2</xref>) relies on the idea that data is removed because it expires. Similarly, initial work on stream reasoning like IMaRS assumes that consumption and expiration overlaps. However, this is not always the case: while some input data can be consumed (e.g. by a sliding window), some derivations may still be useful to solve the task. It follows that such derived data should not be consumed at the same time. We need models and techniques to manage consumption and expiration separately. In this way, the semantics of forgetting data becomes more precise, improving the quality of the engine answers.</p>
<p>Another approach is to exploit the semantics and knowledge about the data content to identify the relevant information. Ongoing research in DSMS is studying how to use knowledge about the streaming data to define windows, e.g. session windows in Google Dataflow [<xref ref-type="bibr" rid="ref002">2</xref>] and frames [<xref ref-type="bibr" rid="ref061">61</xref>]. The idea behind such techniques is to create windows by using specific information in the data (e.g. a session identifier in a server access log), rather than by using generic information such as time or number or elements. Moving from DSMS to stream reasoning, TEF-SPARQL [<xref ref-type="bibr" rid="ref057">57</xref>] allows users to define facts as time-annotated elements by declaring a set of conditions on the input stream items. The approach presented in [<xref ref-type="bibr" rid="ref128">128</xref>] introduces the notion of semantic importance, as a set of metrics assigned to the stream items, such as query contribution and provenance. These values lead the process of deciding which information should be consumed.</p>
</sec>
</sec>
<sec id="x1-150003.2">
<label>3.2.</label>
<title>Towards sophisticated stream reasoning</title>
<p>As the stream reasoning name suggests, reasoning plays a crucial role. In this section, we describe two directions related to this topic. The first is the study of more expressive formalisms for deductive reasoning, such as temporal logics and, more in general, alternatives to description logics. The second is the integration of deductive reasoning with other types of reasoning, such as the inductive one.</p>
<sec id="x1-160003.2.1">
<label>3.2.1.</label>
<title>Extending the range of logical formalisms</title>
<p>After ten years of stream reasoning investigations, it appears that logical languages are most popular for stream reasoning. Most of the works reported in this paper use or slightly extend OWL 2 DL and its fragments.</p>
<p>In the next years, we think it is important to investigate other inference approaches and how they can be combined with OWL. First steps in this direction were taken using ASP [<xref ref-type="bibr" rid="ref048">48</xref>,<xref ref-type="bibr" rid="ref058">58</xref>]. Important contribution may arise by the study of temporal logics [<xref ref-type="bibr" rid="ref008">8</xref>] in the streaming context. The processing of data streams with Metric Temporal Logic was pioneered in [<xref ref-type="bibr" rid="ref066">66</xref>] and it is now attracting again interests [<xref ref-type="bibr" rid="ref026">26</xref>,<xref ref-type="bibr" rid="ref121">121</xref>]. However, as already noticed in [<xref ref-type="bibr" rid="ref037">37</xref>], several other logics also appear to be valid starting points, e.g. temporal action logic [<xref ref-type="bibr" rid="ref047">47</xref>], step logic [<xref ref-type="bibr" rid="ref050">50</xref>], active logic [<xref ref-type="bibr" rid="ref049">49</xref>] and event calculus [<xref ref-type="bibr" rid="ref116">116</xref>].</p>
</sec>
<sec id="x1-170003.2.2">
<label>3.2.2.</label>
<title>Integrating other types of reasoning</title>
<p>One element usually found in stream reasoning solutions is the presence of a conceptual model, possibly in combination with rich background knowledge. They can usually be described through an ontological language, which enables the derivation of implicit information. When queries extend the set of operators as described above, an interesting challenge will be to investigate how several reasoning techniques can coexist.</p>
<p>For example, let’s consider the system that integrates machine learning and deductive reasoning algorithms described in the end of Section <xref rid="x1-60002.1.3">2.1.3</xref>. The authors of [<xref ref-type="bibr" rid="ref017">17</xref>] built a system that pipes the results of an RSP engine into a machine learning system. However, this is just one possibility. The latter may also feed the former (as in [<xref ref-type="bibr" rid="ref087">87</xref>]). Moreover, it is possible to exploit more interactive paradigms, where results of machine learning and reasoning techniques are continuously exchanged to achieve a given goal.</p>
<p>In addition to the machine learning mentioned above, we hope to observe an increasing number of explorations that study how to combine (deductive) stream reasoning with other techniques, such as probabilistic reasoning, planning, natural language processing, sentiment analysis.</p>
</sec>
</sec>
<sec id="x1-180003.3">
<label>3.3.</label>
<title>Towards semantic streams</title>
<p>One of the ways to introduce semantics is through annotations: they can describe data in a machine-readable fashion, and can consequently be read and processed by systems. Even if this is a typical semantic web use case, this direction has been investigated by few studies so far, e.g. [<xref ref-type="bibr" rid="ref065">65</xref>,<xref ref-type="bibr" rid="ref092">92</xref>].</p>
<p>There is a potential value in annotating streams: it enables engines to access a description of the stream and to use it to take decisions, e.g. dynamic discovery and selection of data sources.</p>
<p>The stream descriptor can provide quantitative and qualitative information about the content, e.g. statistical data about frequency and size, information about the vocabularies adopted in the stream items and provenance. Such information may help the stream reasoner in taking some decisions on how to process the stream, even before starting to receive it, e.g. relevancy of the data w.r.t. the registered queries, query optimisation or need for data eviction techniques.</p>
<p>The description of the stream may provide knowledge about its content. We can indeed observe that stream content is heterogeneous in nature. A stream may bring states (e.g. the temperature in a room), producing data items in a periodic way (e.g. every 2 seconds) or when the state change (e.g. when the temperature increases of one degree). Streams may also describe sequences of actions (e.g. the log of the user interaction in a Web site).</p>
<p>When the query developer aims at describing a task for a stream reasoner, it is up to him to know what the stream carries and consequently to take proper decisions. By exploiting annotations about the stream it would be possible to improve the interoperability at application level: tools may assist the development of queries over the stream and help domain experts with limited technical skills. As usual, when talking about vocabularies and annotations, it will be important to compare the existing proposals as well as the upcoming ones, to find agreements and to come up with shared standards.</p>
</sec>
<sec id="x1-190003.4">
<label>3.4.</label>
<title>Towards scalable stream reasoners</title>
<p>The progress on stream reasoning foundations sets the basis to build a new generation of more sophisticated stream reasoning frameworks. Researchers integrate reasoning processes in a gradual way, from the application of reasoning over the window content as an ontology, e.g. Streaming Knowledge Bases and Sparkwave, to more sophisticated solutions that take into account also the time dimension and the transient nature of the data stream items in the reasoning process, e.g. ExaStream. In the following, we will present the main challenges that stream reasoner researchers and engineers are going to cope with in order to build new engines.</p>
<p>Scalability is an open and exciting challenge: which order of throughput will stream reasoners be able to support?</p>
<p>As known, there are theoretical results that set some constraints to the velocity that stream reasoners may reach. Reasoning computational complexity is strictly related to the adopted ontological language: the query answering task of the three OWL 2 dialects can vary from AC<sup>0</sup> and polynomial (w.r.t. ABox size) up to NP and EXP (w.r.t. ABox, TBox and query sizes). In this sense, it is not possible to expect that a stream reasoner is going to reach the performance of DSMS and CEP solutions.</p>
<p>However, here we observe a trade-off similar to the one between memory size and access time in computer systems, which is solved using a memory hierarchy. As proposed in [<xref ref-type="bibr" rid="ref118">118</xref>], a hierarchy of processing steps of increasing complexity can tackle scalability. Technically, this is doable because reasoning can speed up by pushing down processing steps in the hierarchy (e.g., query rewriting) and by post-processing the results coming up from the layer underneath.</p>
<sec id="x1-200003.4.1">
<label>3.4.1.</label>
<title>Approximating the results</title>
<p>A typical approach to scale DSMS and CEP systems is to move from complete and exact outputs to approximated ones. Such answers are acceptable in a wide range of scenarios, in particular when tasks require aggregations and small errors are tolerable, e.g. counting the number of people entering a square or calculating the average temperature in a building.</p>
<p>There are several ways to achieve approximation. Load shedding [<xref ref-type="bibr" rid="ref120">120</xref>] techniques capture the idea that the system can produce the output by processing a portion of the stream and throwing away the remaining part. Over the years, several load shedding techniques have been proposed, to select (with the minimal effort) the data to be evicted to minimise the error of the answer. [<xref ref-type="bibr" rid="ref022">22</xref>,<xref ref-type="bibr" rid="ref056">56</xref>] introduce data eviction in stream reasoning. The main difference of applying load shedding in stream reasoning is the more complex nature of the data items and the reasoning process itself. Removing data in aggregation operations can introduce errors that can be estimated and controlled. In stream reasoning, the eviction of a single fact may drastically affect the inference process, with high impact on the correctness of the answer.</p>
<p>Besides data eviction, that discards data before processing it, summarization exploits the idea that output can be computed starting with a summary of the input data rather than from the whole dataset. DSMS, CEP and DL reasoning have extensively used these techniques. Summaries in DSMS and CEP, also named sketches, are used to reduce the memory consumption of the engine and to approximate results of aggregations [<xref ref-type="bibr" rid="ref046">46</xref>]. Several sketch methods are available, usually tailored to specific kinds of aggregation query, e.g. [<xref ref-type="bibr" rid="ref028">28</xref>]. In the DL-reasoning context, summaries follow a similar idea [<xref ref-type="bibr" rid="ref053">53</xref>,<xref ref-type="bibr" rid="ref130">130</xref>]: the ontology (or part of it) is transformed in a <italic>smaller</italic> representation, over which it is possible to perform reasoning tasks.</p>
<p>While the above approaches focus on data, other techniques work to simplify the processing, gaining in performance while introducing some degree of approximation. An example is [<xref ref-type="bibr" rid="ref103">103</xref>]: authors propose methods to reason over ontologies represented in OWL 2 DL through inference processes of OWL 2 EL, i.e. a tractable fragment of OWL 2 DL. Axioms that cannot be treated in OWL 2 EL (e.g. inverse properties) are managed through ad-hoc rules, applied before and after the reasoning process. In this way, it is usually possible to apply faster algorithms to perform the reasoning task, moving from a situation of certain answer to approximated ones (under some correctness constraints).</p>
</sec>
<sec id="x1-210003.4.2">
<label>3.4.2.</label>
<title>Parallelizing and distributing the stream reasoners</title>
<p>Parallelization and distribution can be seen as an opportunity or as a challenge. So far stream reasoning was addressed bringing data streams and contextual (or background) knowledge in one single point. If this point is a cluster, parallelization and distribution (in the cluster) is an approach to engineer scalable and elastic stream reasoners. The first part of this section discusses this opportunity. However, data streams are parallel and distributed sources in nature. The same applies to many Web data sources to join data streams with. Pushing computation to those sources (see also Fog Computing as a broader research field) is the challenge presented in the second half of this section.</p>
<p>When talking about parallelization and distribution, the intuitive idea is that the processing can be split and executed at the same time in multiple locations, e.g. multiple processors in a machine or different nodes in a cluster or a cloud platform.</p>
<p>Looking at stream reasoning, we can find only some attempts in this direction, such as DynamiTE. However, in adjacent areas several investigations are available: in stream processing, e.g. [<xref ref-type="bibr" rid="ref001">1</xref>,<xref ref-type="bibr" rid="ref078">78</xref>], in big data processing, e.g. [<xref ref-type="bibr" rid="ref027">27</xref>,<xref ref-type="bibr" rid="ref080">80</xref>,<xref ref-type="bibr" rid="ref129">129</xref>], and in SPARQL query evaluation, e.g. [<xref ref-type="bibr" rid="ref062">62</xref>,<xref ref-type="bibr" rid="ref106">106</xref>,<xref ref-type="bibr" rid="ref114">114</xref>].</p>
<p>Engineering a distributed stream reasoner is a challenging task that touches several scientific and technical problems. Ideally, such a system should maximise the throughput, finding a perfect balance between network load (i.e. how data route through the nodes) and machine load (i.e. the computation loads assigned to the nodes). It is, therefore, important to understand which are the best topologies, operators and data distributions to perform the stream reasoning task.</p>
<p>One initial study in this direction is [<xref ref-type="bibr" rid="ref052">52</xref>]: authors propose to apply graph partitioning over linked data streams in the context of continuous query answering. The goal is to reduce the network load and consequently improve the performance of the system. Further work is needed to understand the problem of how to cope with the presence of inference processes in the context of reasoning.</p>
<p>Several contributions are available on parallel and distributed reasoning in non-streaming settings. One possible way to achieve this is to treat the data as a set of interconnected ontologies: first reasoning over each ontology is locally performed and the inference completes by exchanging messages, e.g. [<xref ref-type="bibr" rid="ref014">14</xref>,<xref ref-type="bibr" rid="ref115">115</xref>]. More recent work exploits new parallelization paradigms to perform the reasoning process, e.g. [<xref ref-type="bibr" rid="ref096">96</xref>,<xref ref-type="bibr" rid="ref124">124</xref>]. The usual problems of distributed reasoners are related to termination, i.e. decide when nodes can stop the computation, and to duplicates, i.e. the less duplicated derivations, the higher the performance. The problem in stream reasoning is exacerbated by the need to provide reactive answers.</p>
<p>The last direction we highlight is related to the data distribution problem. When considering scenarios like the Web, it often happens that the data is distributed, controlled by several actors and exposed through services, e.g. SPARQL endpoints or Web APIs, working with either pull or push mechanisms. In such contexts, it often happens that data cannot be centralised and permanently stored in local memory of the stream engine. For example, data cannot fit in the engine memory, it may change over time (and services may not publish notifications), or can only be stored for limited amounts of time for legal reasons. This setting poses interesting challenges to stream reasoning, where responsiveness is one of the most critical requirements. One of the possible ways to see the problem is the following: given the data that can be pushed to the processor, which is the needed contextual remote data to be pulled to solve the given task? In other words, the challenge is how to achieve the integration of the local and remote data without losing responsiveness. The initial effort [<xref ref-type="bibr" rid="ref035">35</xref>,<xref ref-type="bibr" rid="ref055">55</xref>] works in the setting of linked data integration of streaming and contextual data for query evaluation purposes. The idea is to adopt caches where to store a portion of the remote data, updating it depending on the recent stream content. Another relevant work is the one in [<xref ref-type="bibr" rid="ref069">69</xref>], where the authors study the problem of integrating distributed dynamic data and process it through a set of rules. Further techniques are required, since moving and replicating data in the processing nodes impacts the performance.</p>
</sec>
<sec id="x1-220003.4.3">
<label>3.4.3.</label>
<title>Reasoning outside the window</title>
<p>The stream-level entailment offers an additional opportunity for stream reasoning. The main challenge is on the resource usage. Given the absence of a sliding window, which introduces a consumption mechanism for the formula validities, a reasoner operating under stream-level entailment may require an unrealistic amount of memory and processing capabilities. In other words, is it possible to build a generic framework to perform stream reasoning under stream-level entailment? Under which conditions would it work without exceeding the assigned amount of resources? Neither LARS nor EP-SPARQL, described in Section <xref rid="x1-80002.3">2.3</xref>, is targeting such problems. LARS allows defining formulas over the whole stream without limiting the reasoning effect to the window content. However, it is a theoretical framework and no implementations are available at the moment.</p>
<p>Looking at the problem from a database perspective, we can observe that a DSMS can compute the average of those numbers incrementally with finite memory. This relates to the database notion of non-blocking operators. Our intuition is that reasoning outside the window is feasible for <italic>non-blocking reasoning tasks</italic>. For instance, it is possible to compute the materialisation of a stream under the DL-fragment of RDFS when the TBox is fixed. The inference can be applied to each stream item independently, avoiding the storage of streaming data to compute future derivations. That is the case of EP-SPARQL and Etalis: given a fixed schema, all the inference rules are triggered by one data item. In other words, the reasoning process does not need to access the past to compute new derivations. Etalis can still have problems with the memory management: the registered queries may require an infinite amount of memory to compute all the solutions. However, this is a problem related to the CEP-nature of the system rather than to the reasoning one. Researchers investigating online monitoring (i.e. the assessment of a temporal logic formula w.r.t. a stream) are developing solid foundations on this topic. In 2013, [<xref ref-type="bibr" rid="ref020">20</xref>] introduces the notion of trace-length independence, to indicate monitors able to operate with space resources independent from the number of stream events. Recently, [<xref ref-type="bibr" rid="ref019">19</xref>] refined the trace-length independence by proposing the notion of <italic>event-rate independence</italic>, to indicate monitors able to work with an amount of space independent from the number of events in a time unit.</p>
<p>Building systems that perform window-level entailment requires coping with the problem of introducing controls on the resource usage, in particularly on the memory usage. A task can usually be modelled through a conceptual model, one or more data streams and a set of operations (represented by a query). There are classes of queries that guarantee an upper bound on resource usages, given an underlying logical language. EP-SPARQL and the studies mentioned above supply evidence about this since it is possible to execute its query with a limited amount of memory usage.</p>
<p>Answers to the above question can enable the constructions of new algorithms to perform stream- and window-level entailment, able to analyse the current scenario and decide which strategy to adopt to execute the query in a <italic>safe</italic> way avoiding to exceed the assigned resources. For example, a system may decide to compute the correct answer when the conditions allow it, and move to approximated results in the other cases, by adopting item consumption and summary techniques.</p>
</sec>
</sec>
<sec id="x1-230003.5">
<label>3.5.</label>
<title>Towards robustness to imperfect data</title>
<p>The road to the usage of stream reasoning in real environments goes through the ability to process imperfect data, that can be either noisy or incomplete. Deductive reasoning is sensible to noise and incomplete data: one single error may lead a system to an overall inconsistent state. In this section, we discuss the open problems related to stream reasoning with imperfect data, analyzing first the ones related to heterogeneity and then the ones related to noise.</p>
<sec id="x1-240003.5.1">
<label>3.5.1.</label>
<title>Overcoming the heterogeneity</title>
<p>As we depicted above, reasoning offers a set of methods and solutions to cope with the heterogeneity. In particular, such techniques focus on the problem of heterogeneity at schema-level: when models are different, OBDA is a solution to access such data through a conceptual shared model. For example, [<xref ref-type="bibr" rid="ref033">33</xref>,<xref ref-type="bibr" rid="ref065">65</xref>] propose to annotate the streams through an ontology, and to reason about those metadata to retrieve and integrate the streaming data needed for the processing. Tackling this problem is important, but heterogeneity issues affect the stream reasoning scenario in other ways.</p>
<p>Data streams can be heterogeneous because they are not synchronised. For instance, imagine two cameras monitoring the same street that report every minute the number of cars they counted. They report the same number only if they are in sync. If one camera starts the counting 20 seconds before the other one, the two counting will differ, but this second situation is normal in an open world. Similarly, a continuous query may require to join a data stream with background knowledge served by a pull API, e.g. to monitor the changes in the number of followers the users mentioned in a stream of microposts, because user profiles normally are only available via pull API. There is no guarantee that the API is returning values that are temporally aligned with the data stream. The solution of this problem requires both a rich semantic description of the data streams (see Section <xref rid="x1-180003.3">3.3</xref>) and an extension of stream reasoning methods. A possible research direction is to offer a synchronisation service to be used to perform the stream reasoning tasks. [<xref ref-type="bibr" rid="ref064">64</xref>] proposes to define synchronization policies, built on the top of a notion of state, to perform the streams alignment is these kind of services. Such services may also offer the opportunity to homogenise access to stored time-series and continuously computed predictions.</p>
<p>Another service that such a layer can provide is the on demand discretisation abstraction of quantities as facts. For instance, a stream reasoner may prefer the cameras of the example above to report the level of congestion in the street rather than the counting. However, different applications (or even the same application in different moments) may require different discretisations. A first step in this direction is reported in [<xref ref-type="bibr" rid="ref123">123</xref>], where the authors report on a system able to answer continuous queries over data stream applying a rewriting method for query answering over temporal fuzzy DL-Lite ontologies.</p>
<p>Finally, heterogeneity can go beyond the data and affect the stream reasoner as well. Existing stream reasoning techniques differ from each other. It is evident when the goal is different, but it happens even when they perform the same task and user may expect the same output. There is an ongoing effort on studying heterogeneity in stream reasoners. RSEP-QL [<xref ref-type="bibr" rid="ref043">43</xref>,<xref ref-type="bibr" rid="ref044">44</xref>] is a reference model to explain heterogeneity in stream reasoners under simple entailment, while LARS [<xref ref-type="bibr" rid="ref032">32</xref>] has been introduced to capture the behaviour of stream reasoners under more complex regimes. Studying and understanding heterogeneity of stream reasoners is important to achieve interoperability, standardization and comparison.</p>
</sec>
<sec id="x1-250003.5.2">
<label>3.5.2.</label>
<title>Coping with noise</title>
<p>DSMS and CEP have always coped with noise [<xref ref-type="bibr" rid="ref030">30</xref>]. We can distinguish two different types of noise, given that the streaming item is composed of some content and a time annotation.</p>
<p>The first one affects the stream item content. Sensors may break and stop to work. Or worse, they may degrade their precision and provide observations with some degree of error, leading the processing to wrong results. The problem is not limited to the sensor-generated data: streams generated from human interactions may contain syntactical or semantical errors in the data items. In a stream reasoning scenario, this may lead to wrong conclusions and consequently to wrong decisions and actions.</p>
<p>When the stream has a very simple schema (e.g. a time series), statistical methods can supply solutions to manage the noise. However, when we consider more complex schemata, more sophisticated methods may be required. Recently, techniques to cope with noise in stream reasoning emerged, e.g. [<xref ref-type="bibr" rid="ref085">85</xref>]. The idea is to adopt machine learning to process noisy data and to learn models over which to apply deductive reasoning processes. Inductive reasoning is a powerful tool to cope with noise, but there are other solutions to explore in the next years. Looking at deductive reasoning techniques, inconsistency repair [<xref ref-type="bibr" rid="ref007">7</xref>,<xref ref-type="bibr" rid="ref088">88</xref>] and belief revision [<xref ref-type="bibr" rid="ref109">109</xref>,<xref ref-type="bibr" rid="ref111">111</xref>] offer solid foundations to build framework to identify noise and to decide the proper actions to be taken. The challenge for researchers is to find algorithms able to use them in the context of stream processing.</p>
<p>The other kind of noise is the one that affects the temporal annotations on the data item. When considering a single stream, the noise manifests in the out-of-order phenomena: for some reasons (e.g. during stream production or transmission), the stream engine is receiving stream items in a wrong order. However, the problem may become more complicated when considering multiple streams. Different sources are producing and publishing them, and this can lead to the introduction of noise, since they may adopt different, not perfectly aligned clocks to generate the temporal annotations. Moreover, one stream can be received sensibly before another one, since the transmission time between two points of a network can require different time.</p>
<p>Several solutions have been proposed to cope with noise in time in the context of stream and event processing, e.g. [<xref ref-type="bibr" rid="ref089">89</xref>,<xref ref-type="bibr" rid="ref117">117</xref>], and stream reasoning can get an advantage of such techniques as well. However, we believe that semantics can offer the opportunity to enhance the existing methods to manage such problems. Engines can use the rich and machine-readable descriptions of the data streams to monitor if the received data stream has the correct order. When not, the system would be aware of issues in the stream, with the possibility to take actions.</p>
</sec>
</sec>
</sec>
<sec id="x1-260004">
<label>4.</label>
<title>Conclusions</title>
<p>We are observing an impressive increase of the speed of data production and consumption. In this paper, we explained how stream reasoning aims at providing methods and tools to perform sophisticated analyses of such data.</p>
<p>In the beginning, stream reasoning grew with the idea of building such analyses on top of logical and deductive inference. DSMS, CEP and SemWeb offered solid starting points to kick off the research. Through the years, we have observed the creation of languages, techniques and frameworks. Those studies pushed stream reasoning in a broader area, introducing reasoning techniques beyond the deductive ones. Semantic Scholar and Google Scholar count more than a 1000 articles containing “stream reasoning”,<xref ref-type="fn" rid="fn5">5</xref><fn id="fn5"><label><sup>5</sup></label>
<p>Checked at February 2017.</p></fn> published in different areas, from semantic web to artificial intelligence. However, there is still a lot of research to be done.</p>
<p>In Section <xref rid="x1-100003">3</xref>, we presented the main directions over which stream reasoning research can continue. Stream reasoners should offer richer query languages, which include a wider set of operators to encode user needs, and the engine to evaluate them. Reasoning took a more generic connotation, and now it includes inductive reasoning techniques in addition to deductive ones. This trend will grow, combining different techniques to overcome their respective limits. Solutions need to be engineered in scalable frameworks, i.e., they must be able to integrate and reason over huge amounts of heterogeneous data while guaranteeing time requirements. And it will be important to fill the gaps between theoretical models and reality, making stream reasoning solutions robust and able to cope with issues such as noise and heterogeneity. In parallel, it will be important to identify real problems and scenarios where stream reasoning may be a solution. Internet of Things and Industry 4.0 are examples of areas where to apply stream reasoning results. Moreover, it is necessary to develop benchmarking and evaluation activities, to compare and contrast the current solutions.</p>
<p>Results obtained up to now are important. In addition to the publications, some of the mature solutions were exploited in real scenarios, such as social media analytics and turbine monitoring. We should get inspired by such results, and see them as the foundations to build new research and to reach new ambitious achievements, to reach the goal of: <disp-quote>
<p>making sense in real time of multiple, heterogeneous, gigantic and inevitably noisy and incomplete data streams in order to support the decision process of extremely large numbers of concurrent users [<xref ref-type="bibr" rid="ref036">36</xref>].</p></disp-quote></p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>We would like to thank Fredrik Heintz, Ruben Verborgh and Paul Fodor for their valuable reviews. Their comments contributed in improving the quality of this article.</p>
<p>We would also like to thank the Swiss National Science Foundation (SNF) for partial support of this work unter contract number <ext-link ext-link-type="uri" xlink:href="http://www.nfp75.ch/en/projects/module-1-information-technology/project-boehlen">#407550_167177</ext-link>.</p></ack>
<ref-list>
<title>References</title>
<ref id="ref001">
<label>[1]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.J.</given-names> <surname>Abadi</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Ahmad</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Balazinska</surname></string-name>, <string-name><given-names>U.</given-names> <surname>Çetintemel</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Cherniack</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Hwang</surname></string-name>, <string-name><given-names>W.</given-names> <surname>Lindner</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Maskey</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Rasin</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Ryvkina</surname></string-name>, <string-name><given-names>N.</given-names> <surname>Tatbul</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Xing</surname></string-name> and <string-name><given-names>S.B.</given-names> <surname>Zdonik</surname></string-name>, <chapter-title>The design of the borealis stream processing engine</chapter-title>, in: <source>CIDR</source>, <year>2005</year>, pp. <fpage>277</fpage>–<lpage>289</lpage>. <comment>Available online at</comment> <uri>http://cidrdb.org/cidr2005/papers/P23.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref002">
<label>[2]</label><mixed-citation publication-type="journal"><string-name><given-names>T.</given-names> <surname>Akidau</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Bradshaw</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Chambers</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Chernyak</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Fernández-Moctezuma</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Lax</surname></string-name>, <string-name><given-names>S.</given-names> <surname>McVeety</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Mills</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Perry</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Schmidt</surname></string-name> and <string-name><given-names>S.</given-names> <surname>Whittle</surname></string-name>, <article-title>The dataflow model: A practical approach to balancing correctness, latency, and cost in massive-scale, unbounded, out-of-order data processing</article-title>, <source>PVLDB</source> <volume>8</volume>(<issue>12</issue>) (<year>2015</year>), <fpage>1792</fpage>–<lpage>1803</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2824076</uri>.</mixed-citation>
</ref>
<ref id="ref003">
<label>[3]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.I.</given-names> <surname>Ali</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Gao</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Mileo</surname></string-name>, <chapter-title>CityBench: A configurable benchmark to evaluate RSP engines using smart city datasets</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9367</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>374</fpage>–<lpage>389</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-25010-6_25" xlink:type="simple">10.1007/978-3-319-25010-6_25</ext-link>.</mixed-citation>
</ref>
<ref id="ref004">
<label>[4]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Anicic</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Fodor</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Rudolph</surname></string-name> and <string-name><given-names>N.</given-names> <surname>Stojanovic</surname></string-name>, <chapter-title>EP-SPARQL: a unified language for event processing and stream reasoning</chapter-title>, in: <source>WWW</source>, <publisher-name>ACM</publisher-name>, <year>2011</year>, pp. <fpage>635</fpage>–<lpage>644</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1963405.1963495" xlink:type="simple">10.1145/1963405.1963495</ext-link>.</mixed-citation>
</ref>
<ref id="ref005">
<label>[5]</label><mixed-citation publication-type="journal"><string-name><given-names>D.</given-names> <surname>Anicic</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Rudolph</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Fodor</surname></string-name> and <string-name><given-names>N.</given-names> <surname>Stojanovic</surname></string-name>, <article-title>Stream reasoning and complex event processing in ETALIS</article-title>, <source>Semantic Web</source> <volume>3</volume>(<issue>4</issue>) (<year>2012</year>), <fpage>397</fpage>–<lpage>407</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/SW-2011-0053" xlink:type="simple">10.3233/SW-2011-0053</ext-link>.</mixed-citation>
</ref>
<ref id="ref006">
<label>[6]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Arasu</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Babu</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Widom</surname></string-name>, <chapter-title>CQL: A language for continuous queries over streams and relations</chapter-title>, in: <source>DBPL</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>2921</volume>, <publisher-name>Springer</publisher-name>, <year>2003</year>, pp. <fpage>1</fpage>–<lpage>19</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-540-24607-7_1" xlink:type="simple">10.1007/978-3-540-24607-7_1</ext-link>.</mixed-citation>
</ref>
<ref id="ref007">
<label>[7]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Arenas</surname></string-name>, <string-name><given-names>L.E.</given-names> <surname>Bertossi</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Chomicki</surname></string-name>, <chapter-title>Consistent query answers in inconsistent databases</chapter-title>, in: <source>PODS</source>, <publisher-name>ACM Press</publisher-name>, <year>1999</year>, pp. <fpage>68</fpage>–<lpage>79</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/303976.303983" xlink:type="simple">10.1145/303976.303983</ext-link>.</mixed-citation>
</ref>
<ref id="ref008">
<label>[8]</label><mixed-citation publication-type="journal"><string-name><given-names>A.</given-names> <surname>Artale</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Franconi</surname></string-name>, <article-title>A survey of temporal extensions of description logics</article-title>, <source>Ann. Math. Artif. Intell.</source> <volume>30</volume>(<issue>1–4</issue>) (<year>2000</year>), <fpage>171</fpage>–<lpage>210</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1023/A:1016636131405" xlink:type="simple">10.1023/A:1016636131405</ext-link>.</mixed-citation>
</ref>
<ref id="ref009">
<label>[9]</label><mixed-citation publication-type="chapter"><string-name><given-names>F.</given-names> <surname>Baader</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Brandt</surname></string-name> and <string-name><given-names>C.</given-names> <surname>Lutz</surname></string-name>, <chapter-title>Pushing the EL envelope</chapter-title>, in: <source>IJCAI</source>, <publisher-name>Professional Book Center</publisher-name>, <year>2005</year>, pp. <fpage>364</fpage>–<lpage>369</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=1642351</uri>.</mixed-citation>
</ref>
<ref id="ref010">
<label>[10]</label><mixed-citation publication-type="other"><string-name><given-names>F.</given-names> <surname>Baader</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Lutz</surname></string-name> and <string-name><given-names>S.</given-names> <surname>Brandt</surname></string-name>, <chapter-title>Pushing the EL envelope further</chapter-title>, in: <source>OWLED (Spring)</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>496</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2008</year>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-496/owled2008dc_paper_3.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref011">
<label>[11]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Bachmann</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Bird</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Rahman</surname></string-name>, <string-name><given-names>P.T.</given-names> <surname>Devanbu</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>The missing links: Bugs and bug-fix commits</chapter-title>, in: <source>SIGSOFT FSE</source>, <publisher-name>ACM</publisher-name>, <year>2010</year>, pp. <fpage>97</fpage>–<lpage>106</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1882291.1882308" xlink:type="simple">10.1145/1882291.1882308</ext-link>.</mixed-citation>
</ref>
<ref id="ref012">
<label>[12]</label><mixed-citation publication-type="journal"><string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Celino</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>T.K.</given-names> <surname>Lee</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Kim</surname></string-name> and <string-name><given-names>V.</given-names> <surname>Tresp</surname></string-name>, <article-title>Reality mining on micropost streams – deductive and inductive reasoning for personalized and location-based recommendations</article-title>, <source>Semantic Web</source> <volume>5</volume>(<issue>5</issue>) (<year>2014</year>), <fpage>341</fpage>–<lpage>356</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/SW-130107" xlink:type="simple">10.3233/SW-130107</ext-link>.</mixed-citation>
</ref>
<ref id="ref013">
<label>[13]</label><mixed-citation publication-type="journal"><string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Azzi</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Larcher</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Antonelli</surname></string-name> and <string-name><given-names>P.</given-names> <surname>Ciuccarelli</surname></string-name>, <article-title>CitySensing: Fusing city data for visual storytelling</article-title>, <source>IEEE MultiMedia</source> <volume>22</volume>(<issue>3</issue>) (<year>2015</year>), <fpage>44</fpage>–<lpage>53</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/MMUL.2015.54" xlink:type="simple">10.1109/MMUL.2015.54</ext-link>.</mixed-citation>
</ref>
<ref id="ref014">
<label>[14]</label><mixed-citation publication-type="chapter"><string-name><given-names>J.</given-names> <surname>Bao</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Caragea</surname></string-name> and <string-name><given-names>V.</given-names> <surname>Honavar</surname></string-name>, <chapter-title>A tableau-based federated reasoning algorithm for modular ontologies</chapter-title>, in: <source>Web Intelligence</source>, <publisher-name>IEEE Computer Society</publisher-name>, <year>2006</year>, pp. <fpage>404</fpage>–<lpage>410</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/WI.2006.28" xlink:type="simple">10.1109/WI.2006.28</ext-link>.</mixed-citation>
</ref>
<ref id="ref015">
<label>[15]</label><mixed-citation publication-type="journal"><string-name><given-names>D.F.</given-names> <surname>Barbieri</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Braga</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Grossniklaus</surname></string-name>, <article-title>C-SPARQL: a continuous query language for RDF data streams</article-title>, <source>Int. J. Semantic Computing</source> <volume>4</volume>(<issue>1</issue>) (<year>2010</year>), <fpage>3</fpage>–<lpage>25</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1142/S1793351X10000936" xlink:type="simple">10.1142/S1793351X10000936</ext-link>.</mixed-citation>
</ref>
<ref id="ref016">
<label>[16]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.F.</given-names> <surname>Barbieri</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Braga</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Grossniklaus</surname></string-name>, <chapter-title>Incremental reasoning on streams and rich background knowledge</chapter-title>, in: <source>ESWC (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>6088</volume>, <publisher-name>Springer</publisher-name>, <year>2010</year>, pp. <fpage>1</fpage>–<lpage>15</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-13486-9_1" xlink:type="simple">10.1007/978-3-642-13486-9_1</ext-link>.</mixed-citation>
</ref>
<ref id="ref017">
<label>[17]</label><mixed-citation publication-type="journal"><string-name><given-names>D.F.</given-names> <surname>Barbieri</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Braga</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>V.</given-names> <surname>Tresp</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Rettinger</surname></string-name> and <string-name><given-names>H.</given-names> <surname>Wermser</surname></string-name>, <article-title>Deductive and inductive stream reasoning for semantic social media analytics</article-title>, <source>IEEE Intelligent Systems</source> <volume>25</volume>(<issue>6</issue>) (<year>2010</year>), <fpage>32</fpage>–<lpage>41</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/MIS.2010.142" xlink:type="simple">10.1109/MIS.2010.142</ext-link>.</mixed-citation>
</ref>
<ref id="ref018">
<label>[18]</label><mixed-citation publication-type="other"><string-name><given-names>D.F.</given-names> <surname>Barbieri</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <chapter-title>A proposal for publishing data streams as linked data – A position paper</chapter-title>, in: <source>LDOW</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>628</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2010</year>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-628/ldow2010_paper11.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref019">
<label>[19]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.A.</given-names> <surname>Basin</surname></string-name>, <string-name><given-names>B.N.</given-names> <surname>Bhatt</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Traytel</surname></string-name>, <chapter-title>Almost event-rate independent monitoring of metric temporal logic</chapter-title>, in: <source>TACAS (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>10206</volume>, <year>2017</year>, pp. <fpage>94</fpage>–<lpage>112</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-662-54580-5_6" xlink:type="simple">10.1007/978-3-662-54580-5_6</ext-link>.</mixed-citation>
</ref>
<ref id="ref020">
<label>[20]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Bauer</surname></string-name>, <string-name><given-names>J.-C.</given-names> <surname>Küster</surname></string-name> and <string-name><given-names>G.</given-names> <surname>Vegliach</surname></string-name>, <chapter-title>From propositional to first-order monitoring</chapter-title>, in: <source>RV</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8174</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>59</fpage>–<lpage>75</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-40787-1_4" xlink:type="simple">10.1007/978-3-642-40787-1_4</ext-link>.</mixed-citation>
</ref>
<ref id="ref021">
<label>[21]</label><mixed-citation publication-type="chapter"><string-name><given-names>H.</given-names> <surname>Beck</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Dao-Tran</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Eiter</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Fink</surname></string-name>, <chapter-title>LARS: A logic-based framework for analyzing reasoning over streams</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2015</year>, pp. <fpage>1431</fpage>–<lpage>1438</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2887205</uri>.</mixed-citation>
</ref>
<ref id="ref022">
<label>[22]</label><mixed-citation publication-type="chapter"><string-name><given-names>F.</given-names> <surname>Belghaouti</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Bouzeghoub</surname></string-name>, <string-name><given-names>Z.</given-names> <surname>Kazi-Aoul</surname></string-name> and <string-name><given-names>R.</given-names> <surname>Chiky</surname></string-name>, <chapter-title>POL: A pattern oriented load-shedding for semantic data stream processing</chapter-title>, in: <source>WISE (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>10042</volume>, <year>2016</year>, pp. <fpage>157</fpage>–<lpage>171</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-48743-4_13" xlink:type="simple">10.1007/978-3-319-48743-4_13</ext-link>.</mixed-citation>
</ref>
<ref id="ref023">
<label>[23]</label><mixed-citation publication-type="chapter"><string-name><given-names>I.</given-names> <surname>Botan</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Alonso</surname></string-name>, <string-name><given-names>P.M.</given-names> <surname>Fischer</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Kossmann</surname></string-name> and <string-name><given-names>N.</given-names> <surname>Tatbul</surname></string-name>, <chapter-title>Flexible and scalable storage management for data-intensive stream processing</chapter-title>, in: <source>EDBT</source>, <series>ACM International Conference Proceeding Series</series>, Vol. <volume>360</volume>, <publisher-name>ACM</publisher-name>, <year>2009</year>, pp. <fpage>934</fpage>–<lpage>945</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1516360.1516467" xlink:type="simple">10.1145/1516360.1516467</ext-link>.</mixed-citation>
</ref>
<ref id="ref024">
<label>[24]</label><mixed-citation publication-type="journal"><string-name><given-names>J.</given-names> <surname>Calbimonte</surname></string-name>, <string-name><given-names>H.</given-names> <surname>Jeung</surname></string-name>, <string-name><given-names>Ó.</given-names> <surname>Corcho</surname></string-name> and <string-name><given-names>K.</given-names> <surname>Aberer</surname></string-name>, <article-title>Enabling query technologies for the semantic sensor web</article-title>, <source>Int. J. Semantic Web Inf. Syst.</source> <volume>8</volume>(<issue>1</issue>) (<year>2012</year>), <fpage>43</fpage>–<lpage>63</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.4018/jswis.2012010103" xlink:type="simple">10.4018/jswis.2012010103</ext-link>.</mixed-citation>
</ref>
<ref id="ref025">
<label>[25]</label><mixed-citation publication-type="journal"><string-name><given-names>D.</given-names> <surname>Calvanese</surname></string-name>, <string-name><given-names>G.</given-names> <surname>De Giacomo</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Lembo</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Lenzerini</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Poggi</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Rodriguez-Muro</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Rosati</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Ruzzi</surname></string-name> and <string-name><given-names>D.F.</given-names> <surname>Savo</surname></string-name>, <article-title>The MASTRO system for ontology-based data access</article-title>, <source>Semantic Web</source> <volume>2</volume>(<issue>1</issue>) (<year>2011</year>), <fpage>43</fpage>–<lpage>53</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/SW-2011-0029" xlink:type="simple">10.3233/SW-2011-0029</ext-link>.</mixed-citation>
</ref>
<ref id="ref026">
<label>[26]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Calvanese</surname></string-name>, <string-name><given-names>E.G.</given-names> <surname>Kalayci</surname></string-name>, <string-name><given-names>V.</given-names> <surname>Ryzhikov</surname></string-name> and <string-name><given-names>G.</given-names> <surname>Xiao</surname></string-name>, <chapter-title>Towards practical OBDA with temporal ontologies – (position paper)</chapter-title>, in: <source>RR</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9898</volume>, <publisher-name>Springer</publisher-name>, <year>2016</year>, pp. <fpage>18</fpage>–<lpage>24</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-45276-0_2" xlink:type="simple">10.1007/978-3-319-45276-0_2</ext-link>.</mixed-citation>
</ref>
<ref id="ref027">
<label>[27]</label><mixed-citation publication-type="journal"><string-name><given-names>P.</given-names> <surname>Carbone</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Katsifodimos</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ewen</surname></string-name>, <string-name><given-names>V.</given-names> <surname>Markl</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Haridi</surname></string-name> and <string-name><given-names>K.</given-names> <surname>Tzoumas</surname></string-name>, <article-title>Apache flink™: Stream and batch processing in a single engine</article-title>, <source>IEEE Data Eng. Bull.</source> <volume>38</volume>(<issue>4</issue>) (<year>2015</year>), <fpage>28</fpage>–<lpage>38</lpage>. <comment>Available online at</comment> <uri>http://sites.computer.org/debull/A15dec/p28.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref028">
<label>[28]</label><mixed-citation publication-type="journal"><string-name><given-names>G.</given-names> <surname>Cormode</surname></string-name> and <string-name><given-names>S.</given-names> <surname>Muthukrishnan</surname></string-name>, <article-title>An improved data stream summary: The count-min sketch and its applications</article-title>, <source>J. Algorithms</source> <volume>55</volume>(<issue>1</issue>) (<year>2005</year>), <fpage>58</fpage>–<lpage>75</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.jalgor.2003.12.001" xlink:type="simple">10.1016/j.jalgor.2003.12.001</ext-link>.</mixed-citation>
</ref>
<ref id="ref029">
<label>[29]</label><mixed-citation publication-type="other"><string-name><given-names>G.</given-names> <surname>Cugola</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <article-title>Processing flows of information: From data stream to complex event processing</article-title>, <source>ACM Comput. Surv.</source> <volume>44</volume>(<issue>3</issue>) (<year>2012</year>), <elocation-id>15</elocation-id>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2187671.2187677" xlink:type="simple">10.1145/2187671.2187677</ext-link>.</mixed-citation>
</ref>
<ref id="ref030">
<label>[30]</label><mixed-citation publication-type="journal"><string-name><given-names>G.</given-names> <surname>Cugola</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Matteucci</surname></string-name> and <string-name><given-names>G.</given-names> <surname>Tamburrelli</surname></string-name>, <article-title>Introducing uncertainty in complex event processing: Model, implementation, and validation</article-title>, <source>Computing</source> <volume>97</volume>(<issue>2</issue>) (<year>2015</year>), <fpage>103</fpage>–<lpage>144</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/s00607-014-0404-y" xlink:type="simple">10.1007/s00607-014-0404-y</ext-link>.</mixed-citation>
</ref>
<ref id="ref031">
<label>[31]</label><mixed-citation publication-type="other"><string-name><given-names>R.</given-names> <surname>Cyganiak</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Wood</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Lanthaler</surname></string-name>, RDF 1.1 Concepts and Abstract Syntax, W3C Recommendation, W3C, 2014. Available online at <uri>https://www.w3.org/TR/rdf11-concepts/</uri>.</mixed-citation>
</ref>
<ref id="ref032">
<label>[32]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Dao-Tran</surname></string-name>, <string-name><given-names>H.</given-names> <surname>Beck</surname></string-name> and <string-name><given-names>T.</given-names> <surname>Eiter</surname></string-name>, <chapter-title>Contrasting RDF stream processing semantics</chapter-title>, in: <source>JIST</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9544</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>289</fpage>–<lpage>298</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-31676-5_21" xlink:type="simple">10.1007/978-3-319-31676-5_21</ext-link>.</mixed-citation>
</ref>
<ref id="ref033">
<label>[33]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>de Leng</surname></string-name> and <string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name>, <chapter-title>Ontology-based introspection in support of stream reasoning</chapter-title>, in: <source>SCAI</source>, <series>Frontiers in Artificial Intelligence and Applications</series>, Vol. <volume>278</volume>, <publisher-name>IOS Press</publisher-name>, <year>2015</year>, pp. <fpage>78</fpage>–<lpage>87</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/978-1-61499-589-0-78" xlink:type="simple">10.3233/978-1-61499-589-0-78</ext-link>.</mixed-citation>
</ref>
<ref id="ref034">
<label>[34]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>de Leng</surname></string-name> and <string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name>, <chapter-title>Qualitative spatio-temporal stream reasoning with unobservable intertemporal spatial relations using landmarks</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2016</year>, pp. <fpage>957</fpage>–<lpage>963</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=3015955</uri>.</mixed-citation>
</ref>
<ref id="ref035">
<label>[35]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Dehghanzadeh</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Mileo</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>Approximate continuous query answering over streams and dynamic linked data sets</chapter-title>, in: <source>ICWE</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9114</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>307</fpage>–<lpage>325</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-19890-3_20" xlink:type="simple">10.1007/978-3-319-19890-3_20</ext-link>.</mixed-citation>
</ref>
<ref id="ref036">
<label>[36]</label><mixed-citation publication-type="other"><string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, On Stream Reasoning, PhD thesis, Vrije Universiteit Amsterdam, 2015. Available online at <uri>http://dare.ubvu.vu.nl/handle/1871/53293</uri>.</mixed-citation>
</ref>
<ref id="ref037">
<label>[37]</label><mixed-citation publication-type="journal"><string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name>, <string-name><given-names>F.</given-names> <surname>van Harmelen</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Fensel</surname></string-name>, <article-title>It’s a streaming world! Reasoning upon rapidly changing information</article-title>, <source>IEEE Intelligent Systems</source> <volume>24</volume>(<issue>6</issue>) (<year>2009</year>), <fpage>83</fpage>–<lpage>89</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/MIS.2009.125" xlink:type="simple">10.1109/MIS.2009.125</ext-link>.</mixed-citation>
</ref>
<ref id="ref038">
<label>[38]</label><mixed-citation publication-type="chapter"><string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <chapter-title>Taming velocity and variety simultaneously in big data with stream reasoning: Tutorial</chapter-title>, in: <source>DEBS</source>, <publisher-name>ACM</publisher-name>, <year>2016</year>, pp. <fpage>394</fpage>–<lpage>401</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2933267.2933539" xlink:type="simple">10.1145/2933267.2933539</ext-link>.</mixed-citation>
</ref>
<ref id="ref039">
<label>[39]</label><mixed-citation publication-type="journal"><string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Schlobach</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Krötzsch</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Bozzon</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <article-title>Order matters! Harnessing a world of orderings for reasoning over massive data</article-title>, <source>Semantic Web</source> <volume>4</volume>(<issue>2</issue>) (<year>2013</year>), <fpage>219</fpage>–<lpage>231</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/SW-2012-0085" xlink:type="simple">10.3233/SW-2012-0085</ext-link>.</mixed-citation>
</ref>
<ref id="ref040">
<label>[40]</label><mixed-citation publication-type="other"><string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, On Unified Stream Reasoning, PhD thesis, Politecnico di Milano, 2016. Availble online at <uri>http://hdl.handle.net/10589/122892</uri>.</mixed-citation>
</ref>
<ref id="ref041">
<label>[41]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <chapter-title>Applying semantic interoperability principles to data stream management</chapter-title>, in: <source>Data Management in Pervasive Systems</source>, <series>Data-Centric Systems and Applications</series>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>135</fpage>–<lpage>166</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-20062-0_7" xlink:type="simple">10.1007/978-3-319-20062-0_7</ext-link>.</mixed-citation>
</ref>
<ref id="ref042">
<label>[42]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Calbimonte</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name>, <string-name><given-names>Ó.</given-names> <surname>Corcho</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <chapter-title>On correctness in RDF stream processor benchmarking</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8219</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>326</fpage>–<lpage>342</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-41338-4_21" xlink:type="simple">10.1007/978-3-642-41338-4_21</ext-link>.</mixed-citation>
</ref>
<ref id="ref043">
<label>[43]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Dao-Tran</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Calbimonte</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Le Phuoc</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <chapter-title>A query model to capture event pattern matching in RDF stream processing query languages</chapter-title>, in: <source>EKAW</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>10024</volume>, <year>2016</year>, pp. <fpage>145</fpage>–<lpage>162</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-49004-5_10" xlink:type="simple">10.1007/978-3-319-49004-5_10</ext-link>.</mixed-citation>
</ref>
<ref id="ref044">
<label>[44]</label><mixed-citation publication-type="journal"><string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Calbimonte</surname></string-name> and <string-name><given-names>Ó.</given-names> <surname>Corcho</surname></string-name>, <article-title>RSP-QL semantics: A unifying query model to explain heterogeneity of RDF stream processing systems</article-title>, <source>Int. J. Semantic Web Inf. Syst.</source> <volume>10</volume>(<issue>4</issue>) (<year>2014</year>), <fpage>17</fpage>–<lpage>44</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.4018/ijswis.2014100102" xlink:type="simple">10.4018/ijswis.2014100102</ext-link>.</mixed-citation>
</ref>
<ref id="ref045">
<label>[45]</label><mixed-citation publication-type="chapter"><string-name><given-names>C.</given-names> <surname>Dobbins</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Fergus</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Merabti</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Llewellyn-Jones</surname></string-name>, <chapter-title>Monitoring and measuring sedentary behaviour with the aid of human digital memories</chapter-title>, in: <source>CCNC</source>, <publisher-name>IEEE</publisher-name>, <year>2012</year>, pp. <fpage>395</fpage>–<lpage>398</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/CCNC.2012.6181016" xlink:type="simple">10.1109/CCNC.2012.6181016</ext-link>.</mixed-citation>
</ref>
<ref id="ref046">
<label>[46]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Dobra</surname></string-name>, <string-name><given-names>M.N.</given-names> <surname>Garofalakis</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Gehrke</surname></string-name> and <string-name><given-names>R.</given-names> <surname>Rastogi</surname></string-name>, <chapter-title>Processing complex aggregate queries over data streams</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2002</year>, pp. <fpage>61</fpage>–<lpage>72</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/564691.564699" xlink:type="simple">10.1145/564691.564699</ext-link>.</mixed-citation>
</ref>
<ref id="ref047">
<label>[47]</label><mixed-citation publication-type="journal"><string-name><given-names>P.</given-names> <surname>Doherty</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Gustafsson</surname></string-name>, <string-name><given-names>L.</given-names> <surname>Karlsson</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Kvarnström</surname></string-name>, <article-title>TAL: Temporal action logics language specification and tutorial</article-title>, <source>Electron. Trans. Artif. Intell.</source> <volume>2</volume> (<year>1998</year>), <fpage>273</fpage>–<lpage>306</lpage>. Availble online at <uri>http://www.ep.liu.se/ej/etai/1998/009/</uri>.</mixed-citation>
</ref>
<ref id="ref048">
<label>[48]</label><mixed-citation publication-type="journal"><string-name><given-names>T.</given-names> <surname>Eiter</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Ianni</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Lukasiewicz</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Schindlauer</surname></string-name> and <string-name><given-names>H.</given-names> <surname>Tompits</surname></string-name>, <article-title>Combining answer set programming with description logics for the semantic web</article-title>, <source>Artif. Intell.</source> <volume>172</volume>(<issue>12–13</issue>) (<year>2008</year>), <fpage>1495</fpage>–<lpage>1539</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.artint.2008.04.002" xlink:type="simple">10.1016/j.artint.2008.04.002</ext-link>.</mixed-citation>
</ref>
<ref id="ref049">
<label>[49]</label><mixed-citation publication-type="other"><string-name><given-names>J.</given-names> <surname>Elgot-Drapkin</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Kraus</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Miller</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Nirkhe</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Perlis</surname></string-name>, Active logics: A unified formal approach to episodic reasoning, Technical report, 1999. Availble online at <uri>http://hdl.handle.net/1903/1039</uri>.</mixed-citation>
</ref>
<ref id="ref050">
<label>[50]</label><mixed-citation publication-type="other"><string-name><given-names>J.J.</given-names> <surname>Elgot-Drapkin</surname></string-name>, Step-logic: Reasoning situated in time, PhD thesis, University of Maryland at College Park, 1988. Availble online at <uri>https://dl.acm.org/citation.cfm?id=915324</uri>.</mixed-citation>
</ref>
<ref id="ref051">
<label>[51]</label><mixed-citation publication-type="chapter"><string-name><given-names>O.</given-names> <surname>Erling</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Averbuch</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Larriba-Pey</surname></string-name>, <string-name><given-names>H.</given-names> <surname>Chafi</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Gubichev</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Prat-Pérez</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Pham</surname></string-name> and <string-name><given-names>P.A.</given-names> <surname>Boncz</surname></string-name>, <chapter-title>The LDBC social network benchmark: Interactive workload</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2015</year>, pp. <fpage>619</fpage>–<lpage>630</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2723372.2742786" xlink:type="simple">10.1145/2723372.2742786</ext-link>.</mixed-citation>
</ref>
<ref id="ref052">
<label>[52]</label><mixed-citation publication-type="chapter"><string-name><given-names>L.</given-names> <surname>Fischer</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Scharrenbach</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>Scalable linked data stream processing via network-aware workload scheduling</chapter-title>, in: <source>SSWS@ISWC</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1046</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2013</year>, pp. <fpage>81</fpage>–<lpage>96</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1046/SSWS2013_paper6.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref053">
<label>[53]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Fokoue</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Kershenbaum</surname></string-name>, <string-name><given-names>L.</given-names> <surname>Ma</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Schonberg</surname></string-name> and <string-name><given-names>K.</given-names> <surname>Srinivas</surname></string-name>, <chapter-title>The summary abox: Cutting ontologies down to size</chapter-title>, in: <source>International Semantic Web Conference</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>4273</volume>, <publisher-name>Springer</publisher-name>, <year>2006</year>, pp. <fpage>343</fpage>–<lpage>356</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/11926078_25" xlink:type="simple">10.1007/11926078_25</ext-link>.</mixed-citation>
</ref>
<ref id="ref054">
<label>[54]</label><mixed-citation publication-type="journal"><string-name><given-names>C.</given-names> <surname>Forgy</surname></string-name>, <article-title>Rete: A fast algorithm for the many patterns/many objects match problem</article-title>, <source>Artif. Intell.</source> <volume>19</volume>(<issue>1</issue>) (<year>1982</year>), <fpage>17</fpage>–<lpage>37</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/0004-3702(82)90020-0" xlink:type="simple">10.1016/0004-3702(82)90020-0</ext-link>.</mixed-citation>
</ref>
<ref id="ref055">
<label>[55]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Dehghanzadeh</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Mileo</surname></string-name>, <chapter-title>Planning ahead: Stream-driven linked-data access under update-budget constraints</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9981</volume>, <year>2016</year>, pp. <fpage>252</fpage>–<lpage>270</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-46523-4_16" xlink:type="simple">10.1007/978-3-319-46523-4_16</ext-link>.</mixed-citation>
</ref>
<ref id="ref056">
<label>[56]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Scharrenbach</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>The CLOCK data-aware eviction approach: Towards processing linked data streams with limited resources</chapter-title>, in: <source>ESWC</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8465</volume>, <publisher-name>Springer</publisher-name>, <year>2014</year>, pp. <fpage>6</fpage>–<lpage>20</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-07443-6_2" xlink:type="simple">10.1007/978-3-319-07443-6_2</ext-link>.</mixed-citation>
</ref>
<ref id="ref057">
<label>[57]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Scharrenbach</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Kietz</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>Running out of bindings? Integrating facts and events in linked data stream processing</chapter-title>, in: <source>SSN-TC/OrdRing@ISWC</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1488</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2015</year>, pp. <fpage>63</fpage>–<lpage>74</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1488/paper-07.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref058">
<label>[58]</label><mixed-citation publication-type="journal"><string-name><given-names>M.</given-names> <surname>Gebser</surname></string-name>, <string-name><given-names>O.</given-names> <surname>Sabuncu</surname></string-name> and <string-name><given-names>T.</given-names> <surname>Schaub</surname></string-name>, <article-title>An incremental answer set programming based system for finite model computation</article-title>, <source>AI Commun.</source> <volume>24</volume>(<issue>2</issue>) (<year>2011</year>), <fpage>195</fpage>–<lpage>212</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.3233/AIC-2011-0496" xlink:type="simple">10.3233/AIC-2011-0496</ext-link>.</mixed-citation>
</ref>
<ref id="ref059">
<label>[59]</label><mixed-citation publication-type="other"><string-name><given-names>B.</given-names> <surname>Glimm</surname></string-name> and <string-name><given-names>C.</given-names> <surname>Ogbuji</surname></string-name>, SPARQL 1.1 Entailment Regimes, W3C Recommendation, W3C, 2013. Available online at <uri>https://www.w3.org/TR/sparql11-entailment/</uri>.</mixed-citation>
</ref>
<ref id="ref060">
<label>[60]</label><mixed-citation publication-type="other"><string-name><given-names>J.</given-names> <surname>Gray</surname></string-name> (ed.), <source>The Benchmark Handbook for Database and Transaction Systems (2nd Edition)</source>, <publisher-name>Morgan Kaufmann</publisher-name>, <year>1993</year>. ISBN <isbn>1-55860-292-5</isbn>.</mixed-citation>
</ref>
<ref id="ref061">
<label>[61]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Grossniklaus</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Maier</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Miller</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Moorthy</surname></string-name> and <string-name><given-names>K.</given-names> <surname>Tufte</surname></string-name>, <chapter-title>Frames: Data-driven windows</chapter-title>, in: <source>DEBS</source>, <publisher-name>ACM</publisher-name>, <year>2016</year>, pp. <fpage>13</fpage>–<lpage>24</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2933267.2933304" xlink:type="simple">10.1145/2933267.2933304</ext-link>.</mixed-citation>
</ref>
<ref id="ref062">
<label>[62]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Gurajada</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Seufert</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Miliaraki</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Theobald</surname></string-name>, <chapter-title>TriAD: A distributed shared-nothing RDF engine based on asynchronous message passing</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2014</year>, pp. <fpage>289</fpage>–<lpage>300</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2588555.2610511" xlink:type="simple">10.1145/2588555.2610511</ext-link>.</mixed-citation>
</ref>
<ref id="ref063">
<label>[63]</label><mixed-citation publication-type="other"><string-name><given-names>S.</given-names> <surname>Harris</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Seaborne</surname></string-name>, SPARQL 1.1 Query Language, W3C Recommendation, W3C, 2013. Available online at <uri>https://www.w3.org/TR/sparql11-query/</uri>.</mixed-citation>
</ref>
<ref id="ref064">
<label>[64]</label><mixed-citation publication-type="other"><string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name>, DyKnow: A Stream-Based Knowledge Processing Middleware Framework, PhD thesis, Linköping University, Sweden, 2009. Available online at <ext-link ext-link-type="uri" xlink:href="http://www.diva-portal.org/smash/record.jsf?pid=diva2:159661">www.diva-portal.org/smash/record.jsf?pid=diva2:159661</ext-link>.</mixed-citation>
</ref>
<ref id="ref065">
<label>[65]</label><mixed-citation publication-type="chapter"><string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name> and <string-name><given-names>D.</given-names> <surname>de Leng</surname></string-name>, <chapter-title>Semantic information integration with transformations for stream reasoning</chapter-title>, in: <source>FUSION</source>, <publisher-name>IEEE</publisher-name>, <year>2013</year>, pp. <fpage>445</fpage>–<lpage>452</lpage>. <comment>Available online at</comment> <ext-link ext-link-type="uri" xlink:href="http://ieeexplore.ieee.org/document/6641314/">ieeexplore.ieee.org/document/6641314/</ext-link>.</mixed-citation>
</ref>
<ref id="ref066">
<label>[66]</label><mixed-citation publication-type="journal"><string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name> and <string-name><given-names>P.</given-names> <surname>Doherty</surname></string-name>, <article-title>DyKnow: An approach to middleware for knowledge processing</article-title>, <source>Journal of Intelligent and Fuzzy Systems</source> <volume>15</volume>(<issue>1</issue>) (<year>2004</year>), <fpage>3</fpage>–<lpage>13</lpage>. <comment>Available online at</comment> <uri>http://content.iospress.com/articles/journal-of-intelligent-and-fuzzy-systems/ifs00220</uri>.</mixed-citation>
</ref>
<ref id="ref067">
<label>[67]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Huang</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Dai</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Xie</surname></string-name> and <string-name><given-names>B.</given-names> <surname>Huang</surname></string-name>, <chapter-title>The HiBench benchmark suite: Characterization of the MapReduce-based data analysis</chapter-title>, in: <source>2010 IEEE 26th International Conference on Data Engineering Workshops (ICDEW)</source>, <year>2010</year>, pp. <fpage>41</fpage>–<lpage>51</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/ICDEW.2010.5452747" xlink:type="simple">10.1109/ICDEW.2010.5452747</ext-link>.</mixed-citation>
</ref>
<ref id="ref068">
<label>[68]</label><mixed-citation publication-type="chapter"><string-name><given-names>Z.</given-names> <surname>Huang</surname></string-name> and <string-name><given-names>H.</given-names> <surname>Stuckenschmidt</surname></string-name>, <chapter-title>Reasoning with multi-version ontologies: A temporal logic approach</chapter-title>, in: <source>International Semantic Web Conference</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>3729</volume>, <publisher-name>Springer</publisher-name>, <year>2005</year>, pp. <fpage>398</fpage>–<lpage>412</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/11574620_30" xlink:type="simple">10.1007/11574620_30</ext-link>.</mixed-citation>
</ref>
<ref id="ref069">
<label>[69]</label><mixed-citation publication-type="chapter"><string-name><given-names>T.</given-names> <surname>Käfer</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Harth</surname></string-name> and <string-name><given-names>S.</given-names> <surname>Mamessier</surname></string-name>, <chapter-title>Towards declarative programming and querying in a distributed cyber-physical system: The I-VISION case</chapter-title>, in: <source>CPS Data</source>, <publisher-name>IEEE</publisher-name>, <year>2016</year>, pp. <fpage>1</fpage>–<lpage>6</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/CPSData.2016.7496418" xlink:type="simple">10.1109/CPSData.2016.7496418</ext-link>.</mixed-citation>
</ref>
<ref id="ref070">
<label>[70]</label><mixed-citation publication-type="chapter"><string-name><given-names>R.</given-names> <surname>Keskisärkkä</surname></string-name>, <chapter-title>Query templates for RDF stream processing</chapter-title>, in: <source>SR+SWIT@ISWC</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1783</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2016</year>, pp. <fpage>25</fpage>–<lpage>36</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1783/paper-03.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref071">
<label>[71]</label><mixed-citation publication-type="other"><string-name><given-names>R.</given-names> <surname>Keskisärkkä</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Blomqvist</surname></string-name>, <chapter-title>Semantic complex event processing for social media monitoring-a survey</chapter-title>, in: <source>Proceedings of Social Media and Linked Data for Emergency Response (SMILE) Co-Located with the 10th Extended Semantic Web Conference, Montpellier, France. CEUR Workshop Proceedings (May 2013)</source>, <year>2013</year>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1191/paper1.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref072">
<label>[72]</label><mixed-citation publication-type="other"><string-name><given-names>E.</given-names> <surname>Kharlamov</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Brandt</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Giese</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Jiménez-Ruiz</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Lamparter</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Neuenstadt</surname></string-name>, <string-name><given-names>Ö.L.</given-names> <surname>Özçep</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Pinkel</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Soylu</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Zheleznyakov</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Roshchin</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Watson</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <chapter-title>Semantic access to siemens streaming data: The optique way</chapter-title>, in: <source>International Semantic Web Conference (Posters &amp; Demos)</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1486</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2015</year>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1486/paper_23.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref073">
<label>[73]</label><mixed-citation publication-type="chapter"><string-name><given-names>E.</given-names> <surname>Kharlamov</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Brandt</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Jiménez-Ruiz</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Kotidis</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Lamparter</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Mailis</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Neuenstadt</surname></string-name>, <string-name><given-names>Ö.L.</given-names> <surname>Özçep</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Pinkel</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Svingos</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Zheleznyakov</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <string-name><given-names>Y.E.</given-names> <surname>Ioannidis</surname></string-name> and <string-name><given-names>R.</given-names> <surname>Möller</surname></string-name>, <chapter-title>Ontology-based integration of streaming and static relational data with optique</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2016</year>, pp. <fpage>2109</fpage>–<lpage>2112</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2882903.2899385" xlink:type="simple">10.1145/2882903.2899385</ext-link>.</mixed-citation>
</ref>
<ref id="ref074">
<label>[74]</label><mixed-citation publication-type="chapter"><string-name><given-names>E.</given-names> <surname>Kharlamov</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Hovland</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Jiménez-Ruiz</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Lanti</surname></string-name>, <string-name><given-names>H.</given-names> <surname>Lie</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Pinkel</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Rezk</surname></string-name>, <string-name><given-names>M.G.</given-names> <surname>Skjæveland</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Thorstensen</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Xiao</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Zheleznyakov</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <chapter-title>Ontology based access to exploration data at statoil</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9367</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>93</fpage>–<lpage>112</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-25010-6_6" xlink:type="simple">10.1007/978-3-319-25010-6_6</ext-link>.</mixed-citation>
</ref>
<ref id="ref075">
<label>[75]</label><mixed-citation publication-type="chapter"><string-name><given-names>E.</given-names> <surname>Kharlamov</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Kotidis</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Mailis</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Neuenstadt</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Nikolaou</surname></string-name>, <string-name><given-names>Ö.L.</given-names> <surname>Özçep</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Svingos</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Zheleznyakov</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Brandt</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <string-name><given-names>Y.E.</given-names> <surname>Ioannidis</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Lamparter</surname></string-name> and <string-name><given-names>R.</given-names> <surname>Möller</surname></string-name>, <chapter-title>Towards analytics aware ontology based access to static and streaming data</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9982</volume>, <year>2016</year>, pp. <fpage>344</fpage>–<lpage>362</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-46547-0_31" xlink:type="simple">10.1007/978-3-319-46547-0_31</ext-link>.</mixed-citation>
</ref>
<ref id="ref076">
<label>[76]</label><mixed-citation publication-type="chapter"><string-name><given-names>C.</given-names> <surname>Kiefer</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Locher</surname></string-name>, <chapter-title>Adding data mining support to SPARQL via statistical relational learning methods</chapter-title>, in: <source>ESWC</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>5021</volume>, <publisher-name>Springer</publisher-name>, <year>2008</year>, pp. <fpage>478</fpage>–<lpage>492</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-540-68234-9_36" xlink:type="simple">10.1007/978-3-540-68234-9_36</ext-link>.</mixed-citation>
</ref>
<ref id="ref077">
<label>[77]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Kolchin</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Wetz</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Kiesling</surname></string-name> and <string-name><given-names>A.M.</given-names> <surname>Tjoa</surname></string-name>, <chapter-title>YABench: A comprehensive framework for RDF stream processor correctness and performance assessment</chapter-title>, in: <source>ICWE</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9671</volume>, <publisher-name>Springer</publisher-name>, <year>2016</year>, pp. <fpage>280</fpage>–<lpage>298</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-38791-8_16" xlink:type="simple">10.1007/978-3-319-38791-8_16</ext-link>.</mixed-citation>
</ref>
<ref id="ref078">
<label>[78]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Koliousis</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Weidlich</surname></string-name>, <string-name><given-names>R.C.</given-names> <surname>Fernandez</surname></string-name>, <string-name><given-names>A.L.</given-names> <surname>Wolf</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Costa</surname></string-name> and <string-name><given-names>P.R.</given-names> <surname>Pietzuch</surname></string-name>, <chapter-title>SABER: Window-based hybrid stream processing for heterogeneous architectures</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2016</year>, pp. <fpage>555</fpage>–<lpage>569</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2882903.2882906" xlink:type="simple">10.1145/2882903.2882906</ext-link>.</mixed-citation>
</ref>
<ref id="ref079">
<label>[79]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Komazec</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Cerri</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Fensel</surname></string-name>, <chapter-title>Sparkwave: Continuous schema-enhanced pattern matching over RDF data streams</chapter-title>, in: <source>DEBS</source>, <publisher-name>ACM</publisher-name>, <year>2012</year>, pp. <fpage>58</fpage>–<lpage>68</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2335484.2335491" xlink:type="simple">10.1145/2335484.2335491</ext-link>.</mixed-citation>
</ref>
<ref id="ref080">
<label>[80]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Kulkarni</surname></string-name>, <string-name><given-names>N.</given-names> <surname>Bhagat</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Fu</surname></string-name>, <string-name><given-names>V.</given-names> <surname>Kedigehalli</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Kellogg</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Mittal</surname></string-name>, <string-name><given-names>J.M.</given-names> <surname>Patel</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Ramasamy</surname></string-name> and <string-name><given-names>S.</given-names> <surname>Taneja</surname></string-name>, <chapter-title>Twitter heron: Stream processing at scale</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2015</year>, pp. <fpage>239</fpage>–<lpage>250</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2723372.2742788" xlink:type="simple">10.1145/2723372.2742788</ext-link>.</mixed-citation>
</ref>
<ref id="ref081">
<label>[81]</label><mixed-citation publication-type="chapter"><string-name><given-names>K.</given-names> <surname>Kyzirakos</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Karpathiotakis</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Bereta</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Garbis</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Nikolaou</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Smeros</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Giannakopoulou</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Dogani</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Koubarakis</surname></string-name>, <chapter-title>The spatiotemporal RDF store strabon</chapter-title>, in: <source>SSTD</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8098</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>496</fpage>–<lpage>500</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-40235-7_35" xlink:type="simple">10.1007/978-3-642-40235-7_35</ext-link>.</mixed-citation>
</ref>
<ref id="ref082">
<label>[82]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Le Phuoc</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Dao-Tran</surname></string-name>, <string-name><given-names>J.X.</given-names> <surname>Parreira</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Hauswirth</surname></string-name>, <chapter-title>A native and adaptive approach for unified processing of linked streams and linked data</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>7031</volume>, <publisher-name>Springer</publisher-name>, <year>2011</year>, pp. <fpage>370</fpage>–<lpage>388</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-25073-6_24" xlink:type="simple">10.1007/978-3-642-25073-6_24</ext-link>.</mixed-citation>
</ref>
<ref id="ref083">
<label>[83]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Le Phuoc</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Dao-Tran</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Pham</surname></string-name>, <string-name><given-names>P.A.</given-names> <surname>Boncz</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Eiter</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Fink</surname></string-name>, <chapter-title>Linked stream data processing engines: Facts and figures</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>7650</volume>, <publisher-name>Springer</publisher-name>, <year>2012</year>, pp. <fpage>300</fpage>–<lpage>312</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-35173-0_20" xlink:type="simple">10.1007/978-3-642-35173-0_20</ext-link>.</mixed-citation>
</ref>
<ref id="ref084">
<label>[84]</label><mixed-citation publication-type="other"><string-name><given-names>F.</given-names> <surname>Lécué</surname></string-name>, <chapter-title>Diagnosing changes in an ontology stream: A DL reasoning approach</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2012</year>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2900740</uri>.</mixed-citation>
</ref>
<ref id="ref085">
<label>[85]</label><mixed-citation publication-type="chapter"><string-name><given-names>F.</given-names> <surname>Lécué</surname></string-name>, <chapter-title>Towards scalable exploration of diagnoses in an ontology stream</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2014</year>, pp. <fpage>87</fpage>–<lpage>93</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2893889</uri>.</mixed-citation>
</ref>
<ref id="ref086">
<label>[86]</label><mixed-citation publication-type="chapter"><string-name><given-names>F.</given-names> <surname>Lécué</surname></string-name> and <string-name><given-names>J.Z.</given-names> <surname>Pan</surname></string-name>, <chapter-title>Predicting knowledge in an ontology stream</chapter-title>, in: <source>IJCAI</source>, <publisher-name>IJCAI/AAAI</publisher-name>, <year>2013</year>, pp. <fpage>2662</fpage>–<lpage>2669</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2540512</uri>.</mixed-citation>
</ref>
<ref id="ref087">
<label>[87]</label><mixed-citation publication-type="journal"><string-name><given-names>F.</given-names> <surname>Lécué</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Tallevi-Diotallevi</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Hayes</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Tucker</surname></string-name>, <string-name><given-names>V.</given-names> <surname>Bicer</surname></string-name>, <string-name><given-names>M.L.</given-names> <surname>Sbodio</surname></string-name> and <string-name><given-names>P.</given-names> <surname>Tommasi</surname></string-name>, <article-title>Smart traffic analytics in the semantic web with STAR-CITY: Scenarios, system and lessons learned in Dublin city</article-title>, <source>J. Web Sem.</source> <volume>27</volume> (<year>2014</year>), <fpage>26</fpage>–<lpage>33</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.websem.2014.07.002" xlink:type="simple">10.1016/j.websem.2014.07.002</ext-link>.</mixed-citation>
</ref>
<ref id="ref088">
<label>[88]</label><mixed-citation publication-type="other"><string-name><given-names>D.</given-names> <surname>Lembo</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Ruzzi</surname></string-name>, <chapter-title>Consistent query answering over description logic ontologies</chapter-title>, in: <source>Description Logics</source>, Vol. <volume>250</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2007</year>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-250/paper_26.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref089">
<label>[89]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Li</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Golovnya</surname></string-name>, <string-name><given-names>E.A.</given-names> <surname>Rundensteiner</surname></string-name> and <string-name><given-names>K.T.</given-names> <surname>Claypool</surname></string-name>, <chapter-title>Sequence pattern query processing over out-of-order event streams</chapter-title>, in: <source>ICDE</source>, <publisher-name>IEEE Computer Society</publisher-name>, <year>2009</year>, pp. <fpage>784</fpage>–<lpage>795</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/ICDE.2009.95" xlink:type="simple">10.1109/ICDE.2009.95</ext-link>.</mixed-citation>
</ref>
<ref id="ref090">
<label>[90]</label><mixed-citation publication-type="chapter"><string-name><given-names>D.</given-names> <surname>Luckham</surname></string-name>, <chapter-title>The power of events: An introduction to complex event processing in distributed enterprise systems</chapter-title>, in: <source>RuleML</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>5321</volume>, <publisher-name>Springer</publisher-name>, <year>2008</year>, p. <fpage>3</fpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-540-88808-6_2" xlink:type="simple">10.1007/978-3-540-88808-6_2</ext-link>.</mixed-citation>
</ref>
<ref id="ref091">
<label>[91]</label><mixed-citation publication-type="journal"><string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Urbani</surname></string-name>, <string-name><given-names>F.</given-names> <surname>van Harmelen</surname></string-name> and <string-name><given-names>H.E.</given-names> <surname>Bal</surname></string-name>, <article-title>Streaming the web: Reasoning over dynamic data</article-title>, <source>J. Web Sem.</source> <volume>25</volume> (<year>2014</year>), <fpage>24</fpage>–<lpage>44</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.websem.2014.02.001" xlink:type="simple">10.1016/j.websem.2014.02.001</ext-link>.</mixed-citation>
</ref>
<ref id="ref092">
<label>[92]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Mauri</surname></string-name>, <string-name><given-names>J.-P.</given-names> <surname>Calbimonte</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Brambilla</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>K.</given-names> <surname>Aberer</surname></string-name>, <chapter-title>TripleWave: Spreading RDF streams on the web</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9982</volume>, <publisher-name>Springer</publisher-name>, <year>2016</year>, pp. <fpage>140</fpage>–<lpage>149</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-46547-0_15" xlink:type="simple">10.1007/978-3-319-46547-0_15</ext-link>.</mixed-citation>
</ref>
<ref id="ref093">
<label>[93]</label><mixed-citation publication-type="journal"><string-name><given-names>A.</given-names> <surname>McGregor</surname></string-name>, <article-title>Graph stream algorithms: A survey</article-title>, <source>SIGMOD Record</source> <volume>43</volume>(<issue>1</issue>) (<year>2014</year>), <fpage>9</fpage>–<lpage>20</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2627692.2627694" xlink:type="simple">10.1145/2627692.2627694</ext-link>.</mixed-citation>
</ref>
<ref id="ref094">
<label>[94]</label><mixed-citation publication-type="other"><string-name><given-names>X.</given-names> <surname>Meng</surname></string-name>, <string-name><given-names>J.K.</given-names> <surname>Bradley</surname></string-name>, <string-name><given-names>B.</given-names> <surname>Yavuz</surname></string-name>, <string-name><given-names>E.R.</given-names> <surname>Sparks</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Venkataraman</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Freeman</surname></string-name>, <string-name><given-names>D.B.</given-names> <surname>Tsai</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Amde</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Owen</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Xin</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Xin</surname></string-name>, <string-name><given-names>M.J.</given-names> <surname>Franklin</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Zadeh</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Zaharia</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Talwalkar</surname></string-name>, MLlib: Machine Learning in Apache Spark, <italic>CoRR</italic>, <ext-link ext-link-type="uri" xlink:href="http://abs/1505.06807">abs/1505.06807</ext-link> (2015).</mixed-citation>
</ref>
<ref id="ref095">
<label>[95]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Mileo</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Abdelrahman</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Policarpio</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Hauswirth</surname></string-name>, <chapter-title>StreamRule: A nonmonotonic stream reasoning system for the semantic web</chapter-title>, in: <source>RR</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>7994</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>247</fpage>–<lpage>252</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-39666-3_23" xlink:type="simple">10.1007/978-3-642-39666-3_23</ext-link>.</mixed-citation>
</ref>
<ref id="ref096">
<label>[96]</label><mixed-citation publication-type="chapter"><string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Nenov</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Piro</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Olteanu</surname></string-name>, <chapter-title>Parallel materialisation of datalog programs in centralised, main-memory RDF systems</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2014</year>, pp. <fpage>129</fpage>–<lpage>137</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2893896</uri>.</mixed-citation>
</ref>
<ref id="ref097">
<label>[97]</label><mixed-citation publication-type="chapter"><string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Nenov</surname></string-name>, <string-name><given-names>R.E.F.</given-names> <surname>Piro</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <chapter-title>Incremental update of datalog materialisation: The backward/forward algorithm</chapter-title>, in: <source>AAAI</source>, <publisher-name>AAAI Press</publisher-name>, <year>2015</year>, pp. <fpage>1560</fpage>–<lpage>1568</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2886537</uri>.</mixed-citation>
</ref>
<ref id="ref098">
<label>[98]</label><mixed-citation publication-type="journal"><string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <string-name><given-names>U.</given-names> <surname>Sattler</surname></string-name> and <string-name><given-names>R.</given-names> <surname>Studer</surname></string-name>, <article-title>Query answering for OWL-DL with rules</article-title>, <source>J. Web Sem.</source> <volume>3</volume>(<issue>1</issue>) (<year>2005</year>), <fpage>41</fpage>–<lpage>60</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.websem.2005.05.001" xlink:type="simple">10.1016/j.websem.2005.05.001</ext-link>.</mixed-citation>
</ref>
<ref id="ref099">
<label>[99]</label><mixed-citation publication-type="chapter"><string-name><given-names>K.</given-names> <surname>Mouratidis</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Bakiras</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Papadias</surname></string-name>, <chapter-title>Continuous monitoring of top-k queries over sliding windows</chapter-title>, in: <source>SIGMOD Conference</source>, <publisher-name>ACM</publisher-name>, <year>2006</year>, pp. <fpage>635</fpage>–<lpage>646</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1142473.1142544" xlink:type="simple">10.1145/1142473.1142544</ext-link>.</mixed-citation>
</ref>
<ref id="ref100">
<label>[100]</label><mixed-citation publication-type="journal"><string-name><given-names>S.</given-names> <surname>Muñoz</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Pérez</surname></string-name> and <string-name><given-names>C.</given-names> <surname>Gutierrez</surname></string-name>, <article-title>Simple and efficient minimal RDFS</article-title>, <source>J. Web Sem.</source> <volume>7</volume>(<issue>3</issue>) (<year>2009</year>), <fpage>220</fpage>–<lpage>234</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.websem.2009.07.003" xlink:type="simple">10.1016/j.websem.2009.07.003</ext-link>.</mixed-citation>
</ref>
<ref id="ref101">
<label>[101]</label><mixed-citation publication-type="chapter"><string-name><given-names>Y.</given-names> <surname>Nenov</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Piro</surname></string-name>, <string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <string-name><given-names>Z.</given-names> <surname>Wu</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Banerjee</surname></string-name>, <chapter-title>RDFox: A highly-scalable RDF store</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9367</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>3</fpage>–<lpage>20</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-25010-6_1" xlink:type="simple">10.1007/978-3-319-25010-6_1</ext-link>.</mixed-citation>
</ref>
<ref id="ref102">
<label>[102]</label><mixed-citation publication-type="chapter"><string-name><given-names>Ö.L.</given-names> <surname>Özçep</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Möller</surname></string-name> and <string-name><given-names>C.</given-names> <surname>Neuenstadt</surname></string-name>, <chapter-title>A stream-temporal query language for ontology based data access</chapter-title>, in: <source>Description Logics</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1193</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2014</year>, pp. <fpage>696</fpage>–<lpage>708</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1193/paper_47.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref103">
<label>[103]</label><mixed-citation publication-type="journal"><string-name><given-names>J.Z.</given-names> <surname>Pan</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Ren</surname></string-name> and <string-name><given-names>Y.</given-names> <surname>Zhao</surname></string-name>, <article-title>Tractable approximate deduction for OWL</article-title>, <source>Artif. Intell.</source> <volume>235</volume> (<year>2016</year>), <fpage>95</fpage>–<lpage>155</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.artint.2015.10.004" xlink:type="simple">10.1016/j.artint.2015.10.004</ext-link>.</mixed-citation>
</ref>
<ref id="ref104">
<label>[104]</label><mixed-citation publication-type="other"><string-name><given-names>M.</given-names> <surname>Perry</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Herring</surname></string-name>, OGC GeoSPARQL – A Geographic Query Language for RDF Data, Technical report, Open Geospatial Consortium, 2012. Available online at <uri>http://www.opengeospatial.org/standards/geosparql</uri>.</mixed-citation>
</ref>
<ref id="ref105">
<label>[105]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Potamias</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Patroumpas</surname></string-name> and <string-name><given-names>T.K.</given-names> <surname>Sellis</surname></string-name>, <chapter-title>Sampling trajectory streams with spatiotemporal criteria</chapter-title>, in: <source>SSDBM</source>, <publisher-name>IEEE Computer Society</publisher-name>, <year>2006</year>, pp. <fpage>275</fpage>–<lpage>284</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/SSDBM.2006.45" xlink:type="simple">10.1109/SSDBM.2006.45</ext-link>.</mixed-citation>
</ref>
<ref id="ref106">
<label>[106]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Potter</surname></string-name>, <string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Nenov</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Horrocks</surname></string-name>, <chapter-title>Distributed RDF query answering with dynamic data exchange</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9981</volume>, <year>2016</year>, pp. <fpage>480</fpage>–<lpage>497</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-46523-4_29" xlink:type="simple">10.1007/978-3-319-46523-4_29</ext-link>.</mixed-citation>
</ref>
<ref id="ref107">
<label>[107]</label><mixed-citation publication-type="journal"><string-name><given-names>D.</given-names> <surname>Puiu</surname></string-name>, <string-name><given-names>P.M.</given-names> <surname>Barnaghi</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Toenjes</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Kuemper</surname></string-name>, <string-name><given-names>M.I.</given-names> <surname>Ali</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Mileo</surname></string-name>, <string-name><given-names>J.X.</given-names> <surname>Parreira</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Fischer</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Kolozali</surname></string-name>, <string-name><given-names>N.</given-names> <surname>FarajiDavar</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Gao</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Iggena</surname></string-name>, <string-name><surname>Thu-Le Pham</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Nechifor</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Puschmann</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Fernandes</surname></string-name>, <article-title>CityPulse: Large scale data analytics framework for smart cities</article-title>, <source>IEEE Access</source> <volume>4</volume> (<year>2016</year>), <fpage>1086</fpage>–<lpage>1108</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/ACCESS.2016.2541999" xlink:type="simple">10.1109/ACCESS.2016.2541999</ext-link>.</mixed-citation>
</ref>
<ref id="ref108">
<label>[108]</label><mixed-citation publication-type="chapter"><string-name><given-names>Y.</given-names> <surname>Ren</surname></string-name> and <string-name><given-names>J.Z.</given-names> <surname>Pan</surname></string-name>, <chapter-title>Optimising ontology stream reasoning with truth maintenance system</chapter-title>, in: <source>CIKM</source>, <publisher-name>ACM</publisher-name>, <year>2011</year>, pp. <fpage>831</fpage>–<lpage>836</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2063576.2063696" xlink:type="simple">10.1145/2063576.2063696</ext-link>.</mixed-citation>
</ref>
<ref id="ref109">
<label>[109]</label><mixed-citation publication-type="other"><string-name><given-names>M.M.</given-names> <surname>Ribeiro</surname></string-name>, <source>Belief Revision in Non-Classical Logics</source>, <series>Springer Briefs in Computer Science</series>, <publisher-name>Springer</publisher-name>, <year>2013</year>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-1-4471-4186-0" xlink:type="simple">10.1007/978-1-4471-4186-0</ext-link>.</mixed-citation>
</ref>
<ref id="ref110">
<label>[110]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Rinne</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Solanki</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Nuutila</surname></string-name>, <chapter-title>RFID-based logistics monitoring with semantics-driven event processing</chapter-title>, in: <source>DEBS</source>, <publisher-name>ACM</publisher-name>, <year>2016</year>, pp. <fpage>238</fpage>–<lpage>245</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2933267.2933300" xlink:type="simple">10.1145/2933267.2933300</ext-link>.</mixed-citation>
</ref>
<ref id="ref111">
<label>[111]</label><mixed-citation publication-type="other"><string-name><given-names>H.</given-names> <surname>Rott</surname></string-name>, <source>Change, Choice and Inference: A Study of Belief Revision and Nonmonotonic Reasoning</source>, Vol. <volume>42</volume>, <publisher-name>Oxford University Press</publisher-name>, <year>2001</year>. ISBN <isbn>9780198503064</isbn>.</mixed-citation>
</ref>
<ref id="ref112">
<label>[112]</label><mixed-citation publication-type="chapter"><string-name><given-names>T.</given-names> <surname>Saveta</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Daskalaki</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Flouris</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Fundulaki</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Herschel</surname></string-name> and <string-name><given-names>A.N.</given-names> <surname>Ngomo</surname></string-name>, <chapter-title>LANCE: Piercing to the heart of instance matching tools</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9366</volume>, <publisher-name>Springer</publisher-name>, <year>2015</year>, pp. <fpage>375</fpage>–<lpage>391</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-25007-6_22" xlink:type="simple">10.1007/978-3-319-25007-6_22</ext-link>.</mixed-citation>
</ref>
<ref id="ref113">
<label>[113]</label><mixed-citation publication-type="chapter"><string-name><given-names>T.</given-names> <surname>Scharrenbach</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Urbani</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Bernstein</surname></string-name>, <chapter-title>Seven commandments for benchmarking semantic flow processing systems</chapter-title>, in: <source>ESWC</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>7882</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>305</fpage>–<lpage>319</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-38288-8_21" xlink:type="simple">10.1007/978-3-642-38288-8_21</ext-link>.</mixed-citation>
</ref>
<ref id="ref114">
<label>[114]</label><mixed-citation publication-type="journal"><string-name><given-names>A.</given-names> <surname>Schätzle</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Przyjaciel-Zablocki</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Skilevic</surname></string-name> and <string-name><given-names>G.</given-names> <surname>Lausen</surname></string-name>, <article-title>S2RDF: RDF querying with SPARQL on spark</article-title>, <source>PVLDB</source> <volume>9</volume>(<issue>10</issue>) (<year>2016</year>), <fpage>804</fpage>–<lpage>815</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=2977806</uri>.</mixed-citation>
</ref>
<ref id="ref115">
<label>[115]</label><mixed-citation publication-type="chapter"><string-name><given-names>L.</given-names> <surname>Serafini</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Tamilin</surname></string-name>, <chapter-title>DRAGO: Distributed reasoning architecture for the semantic web</chapter-title>, in: <source>ESWC</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>3532</volume>, <publisher-name>Springer</publisher-name>, <year>2005</year>, pp. <fpage>361</fpage>–<lpage>376</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/11431053_25" xlink:type="simple">10.1007/11431053_25</ext-link>.</mixed-citation>
</ref>
<ref id="ref116">
<label>[116]</label><mixed-citation publication-type="other"><string-name><given-names>A.</given-names> <surname>Skarlatidis</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Paliouras</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Artikis</surname></string-name> and <string-name><given-names>G.A.</given-names> <surname>Vouros</surname></string-name>, <article-title>Probabilistic event calculus for event recognition</article-title>, <source>ACM Trans. Comput. Log.</source> <volume>16</volume>(<issue>2</issue>) (<year>2015</year>), <elocation-id>11</elocation-id>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2699916" xlink:type="simple">10.1145/2699916</ext-link>.</mixed-citation>
</ref>
<ref id="ref117">
<label>[117]</label><mixed-citation publication-type="chapter"><string-name><given-names>U.</given-names> <surname>Srivastava</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Widom</surname></string-name>, <chapter-title>Flexible time management in data stream systems</chapter-title>, in: <source>PODS</source>, <publisher-name>ACM</publisher-name>, <year>2004</year>, pp. <fpage>263</fpage>–<lpage>274</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1055558.1055596" xlink:type="simple">10.1145/1055558.1055596</ext-link>.</mixed-citation>
</ref>
<ref id="ref118">
<label>[118]</label><mixed-citation publication-type="other"><string-name><given-names>H.</given-names> <surname>Stuckenschmidt</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Ceri</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name> and <string-name><given-names>F.</given-names> <surname>van Harmelen</surname></string-name>, <chapter-title>Towards expressive stream reasoning</chapter-title>, in: <source>Semantic Challenges in Sensor Networks</source>, <series>Dagstuhl Seminar Proceedings</series>, Vol. <volume>10042</volume>, <publisher-name>Schloss Dagstuhl – Leibniz-Zentrum für Informatik</publisher-name>, <publisher-loc>Germany</publisher-loc>, <year>2010</year>. <comment>Available online at</comment> <uri>http://drops.dagstuhl.de/opus/volltexte/2010/2555/</uri>.</mixed-citation>
</ref>
<ref id="ref119">
<label>[119]</label><mixed-citation publication-type="chapter"><string-name><given-names>S.</given-names> <surname>Tallevi-Diotallevi</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Kotoulas</surname></string-name>, <string-name><given-names>L.</given-names> <surname>Foschini</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Lécué</surname></string-name> and <string-name><given-names>A.</given-names> <surname>Corradi</surname></string-name>, <chapter-title>Real-time urban monitoring in Dublin using semantic and stream technologies</chapter-title>, in: <source>International Semantic Web Conference (2)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8219</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>178</fpage>–<lpage>194</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-41338-4_12" xlink:type="simple">10.1007/978-3-642-41338-4_12</ext-link>.</mixed-citation>
</ref>
<ref id="ref120">
<label>[120]</label><mixed-citation publication-type="chapter"><string-name><given-names>N.</given-names> <surname>Tatbul</surname></string-name>, <string-name><given-names>U.</given-names> <surname>Çetintemel</surname></string-name>, <string-name><given-names>S.B.</given-names> <surname>Zdonik</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Cherniack</surname></string-name> and <string-name><given-names>M.</given-names> <surname>Stonebraker</surname></string-name>, <chapter-title>Load shedding in a data stream manager</chapter-title>, in: <source>VLDB</source>, <year>2003</year>, pp. <fpage>309</fpage>–<lpage>320</lpage>. <comment>Available online at</comment> <uri>https://dl.acm.org/citation.cfm?id=1315479</uri>.</mixed-citation>
</ref>
<ref id="ref121">
<label>[121]</label><mixed-citation publication-type="chapter"><string-name><given-names>M.</given-names> <surname>Tiger</surname></string-name> and <string-name><given-names>F.</given-names> <surname>Heintz</surname></string-name>, <chapter-title>Stream reasoning using temporal logic and predictive probabilistic state models</chapter-title>, in: <source>TIME</source>, <publisher-name>IEEE Computer Society</publisher-name>, <year>2016</year>, pp. <fpage>196</fpage>–<lpage>205</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1109/TIME.2016.28" xlink:type="simple">10.1109/TIME.2016.28</ext-link>.</mixed-citation>
</ref>
<ref id="ref122">
<label>[122]</label><mixed-citation publication-type="chapter"><string-name><given-names>R.</given-names> <surname>Tommasini</surname></string-name>, <string-name><given-names>E.</given-names> <surname>Della Valle</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Balduini</surname></string-name> and <string-name><given-names>D.</given-names> <surname>Dell’Aglio</surname></string-name>, <chapter-title>Heaven: A framework for systematic comparative research approach for RSP engines</chapter-title>, in: <source>ESWC</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>9678</volume>, <publisher-name>Springer</publisher-name>, <year>2016</year>, pp. <fpage>250</fpage>–<lpage>265</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-319-34129-3_16" xlink:type="simple">10.1007/978-3-319-34129-3_16</ext-link>.</mixed-citation>
</ref>
<ref id="ref123">
<label>[123]</label><mixed-citation publication-type="chapter"><string-name><given-names>A.</given-names> <surname>Turhan</surname></string-name> and <string-name><given-names>E.</given-names> <surname>Zenker</surname></string-name>, <chapter-title>Towards temporal fuzzy query answering on stream-based data</chapter-title>, in: <source>HiDeSt@KI</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1447</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2015</year>, pp. <fpage>56</fpage>–<lpage>69</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1447/paper5.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref124">
<label>[124]</label><mixed-citation publication-type="journal"><string-name><given-names>J.</given-names> <surname>Urbani</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Kotoulas</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Maassen</surname></string-name>, <string-name><given-names>F.</given-names> <surname>van Harmelen</surname></string-name> and <string-name><given-names>H.E.</given-names> <surname>Bal</surname></string-name>, <article-title>WebPIE: A web-scale parallel inference engine using MapReduce</article-title>, <source>J. Web Sem.</source> <volume>10</volume> (<year>2012</year>), <fpage>59</fpage>–<lpage>75</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1016/j.websem.2011.05.004" xlink:type="simple">10.1016/j.websem.2011.05.004</ext-link>.</mixed-citation>
</ref>
<ref id="ref125">
<label>[125]</label><mixed-citation publication-type="chapter"><string-name><given-names>J.</given-names> <surname>Urbani</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Margara</surname></string-name>, <string-name><given-names>C.J.H.</given-names> <surname>Jacobs</surname></string-name>, <string-name><given-names>F.</given-names> <surname>van Harmelen</surname></string-name> and <string-name><given-names>H.E.</given-names> <surname>Bal</surname></string-name>, <chapter-title>DynamiTE: Parallel materialization of dynamic RDF data</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>8218</volume>, <publisher-name>Springer</publisher-name>, <year>2013</year>, pp. <fpage>657</fpage>–<lpage>672</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-41335-3_41" xlink:type="simple">10.1007/978-3-642-41335-3_41</ext-link>.</mixed-citation>
</ref>
<ref id="ref126">
<label>[126]</label><mixed-citation publication-type="journal"><string-name><given-names>R.</given-names> <surname>Volz</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Staab</surname></string-name> and <string-name><given-names>B.</given-names> <surname>Motik</surname></string-name>, <article-title>Incrementally maintaining materializations of ontologies stored in logic databases</article-title>, <source>J. Data Semantics</source> <volume>2</volume> (<year>2005</year>), <fpage>1</fpage>–<lpage>34</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-540-30567-5_1" xlink:type="simple">10.1007/978-3-540-30567-5_1</ext-link>.</mixed-citation>
</ref>
<ref id="ref127">
<label>[127]</label><mixed-citation publication-type="other"><string-name><given-names>O.</given-names> <surname>Walavalkar</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Joshi</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Finin</surname></string-name> and <string-name><given-names>Y.</given-names> <surname>Yesha</surname></string-name>, <chapter-title>Streaming knowledge bases</chapter-title>, in: <source>In International Workshop on Scalable Semantic Web Knowledge Base Systems</source>, <year>2008</year>. <comment>Available online at</comment> <uri>http://ebiquity.umbc.edu/paper/html/id/416/Streaming-Knowledge-Bases</uri>.</mixed-citation>
</ref>
<ref id="ref128">
<label>[128]</label><mixed-citation publication-type="chapter"><string-name><given-names>R.</given-names> <surname>Yan</surname></string-name>, <string-name><given-names>M.T.</given-names> <surname>Greaves</surname></string-name>, <string-name><given-names>W.P.</given-names> <surname>Smith</surname></string-name> and <string-name><given-names>D.L.</given-names> <surname>McGuinness</surname></string-name>, <chapter-title>Remembering the important things: Semantic importance in stream reasoning</chapter-title>, in: <source>SR+SWIT@ISWC</source>, <series>CEUR Workshop Proceedings</series>, Vol. <volume>1783</volume>, <publisher-name>CEUR-WS.org</publisher-name>, <year>2016</year>, pp. <fpage>49</fpage>–<lpage>54</lpage>. <comment>Available online at</comment> <uri>http://ceur-ws.org/Vol-1783/paper-05.pdf</uri>.</mixed-citation>
</ref>
<ref id="ref129">
<label>[129]</label><mixed-citation publication-type="journal"><string-name><given-names>M.</given-names> <surname>Zaharia</surname></string-name>, <string-name><given-names>R.S.</given-names> <surname>Xin</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Wendell</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Das</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Armbrust</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Dave</surname></string-name>, <string-name><given-names>X.</given-names> <surname>Meng</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Rosen</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Venkataraman</surname></string-name>, <string-name><given-names>M.J.</given-names> <surname>Franklin</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Ghodsi</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Gonzalez</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Shenker</surname></string-name> and <string-name><given-names>I.</given-names> <surname>Stoica</surname></string-name>, <article-title>Apache spark: A unified engine for big data processing</article-title>, <source>Commun. ACM</source> <volume>59</volume>(<issue>11</issue>) (<year>2016</year>), <fpage>56</fpage>–<lpage>65</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/2934664" xlink:type="simple">10.1145/2934664</ext-link>.</mixed-citation>
</ref>
<ref id="ref130">
<label>[130]</label><mixed-citation publication-type="chapter"><string-name><given-names>X.</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Cheng</surname></string-name> and <string-name><given-names>Y.</given-names> <surname>Qu</surname></string-name>, <chapter-title>Ontology summarization based on rdf sentence graph</chapter-title>, in: <source>WWW</source>, <publisher-name>ACM</publisher-name>, <year>2007</year>, pp. <fpage>707</fpage>–<lpage>716</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1145/1242572.1242668" xlink:type="simple">10.1145/1242572.1242668</ext-link>.</mixed-citation>
</ref>
<ref id="ref131">
<label>[131]</label><mixed-citation publication-type="chapter"><string-name><given-names>Y.</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Pham</surname></string-name>, <string-name><given-names>Ó.</given-names> <surname>Corcho</surname></string-name> and <string-name><given-names>J.</given-names> <surname>Calbimonte</surname></string-name>, <chapter-title>SRBench: A streaming RDF/SPARQL benchmark</chapter-title>, in: <source>International Semantic Web Conference (1)</source>, <series>Lecture Notes in Computer Science</series>, Vol. <volume>7649</volume>, <publisher-name>Springer</publisher-name>, <year>2012</year>, pp. <fpage>641</fpage>–<lpage>657</lpage>. doi:<ext-link ext-link-type="doi" xlink:href="10.1007/978-3-642-35176-1" xlink:type="simple">10.1007/978-3-642-35176-1</ext-link>.</mixed-citation>
</ref>
</ref-list>
</back>
</article>
